{"version":3,"sources":["context/AppReducer.js","components/Tables/Requirements/GeRequirements/GeReqData/index.js","components/Tables/RemainingCourses/GeRemaining/getGeRemaining/getGeRemaining.js","components/Tables/Requirements/MajorRequirements/CecsReqData/index.js","components/Tables/RemainingCourses/MajorRemaining/getMajorRemaining/getMajorRemaining.js","api/index.js","context/Context.js","components/Navigation/Navigation.js","pages/Login/Login.js","components/Progress/Progress.js","components/StudentInfo/StudentInfo.js","utility/DialogSelect/DialogSelect.js","utility/formatTime/formatTime.js","components/Tables/CurrentSchedule/CurrentSchedule.js","components/Tables/RemainingCourses/GeRemaining/GeRemaining.js","components/Tables/RemainingCourses/MajorRemaining/MajorRemaining.js","components/Tables/RemainingCourses/RemainingCourses.js","components/Tables/Requirements/MajorRequirements/MajorRequirements.js","components/Tables/Requirements/GeRequirements/GeRequirements.js","components/Tables/Requirements/Requirements.js","pages/Dashboard/Dashboard.js","components/Tables/History/MajorHistory/MajorHistory.js","components/Tables/History/GeHistory/GeHistory.js","components/Tables/History/OtherHistory/OtherHistory.js","pages/CourseHistory/CourseHistory.js","hooks/useTrait.js","components/Forms/CompletedCourseForm/CircularIntegration/CircularIntegration.js","utility/DrapAndDrop/DragAndDrop.js","utility/MySnackbar/MySnackbar.js","components/Forms/CompletedCourseForm/CompletedCourseForm.js","components/Forms/CurrentCourseForm/CurrentCourseForm.js","components/Tables/SchoolYear/SchoolYear.js","assets/CecsReqs.js","pages/Roadmap/ExportPdf.js","pages/Roadmap/Roadmap.js","components/AppRoutes/PrivateRoute/PrivateRoute.js","components/AppRoutes/AppRoutes.js","App.js","index.js"],"names":["AppReducer","state","action","type","isLoading","currentCourses","payload","completedCourses","error","geReqData","course","units","designation","category","getGeRemaining","geCourses","majorCourses","geEUnitCount","geFUnitCount","geRemaining","requirement","matched","grade","push","additionalReq","filter","idx","findIndex","splice","forEach","split","CAT_E","CAT_F","majorReqData","title","url","majorReqCategory","getMajorRemaining","lowerDivUnitCount","approvedScienceUnitCount","upperDivUnitCount","writingIntensiveUnitCount","coreElectiveUnitCount","appliedElectiveUnitCount","addToRemaining","reqCourse","some","completedCourse","compareUnitCount","majorRemaining","LOWER_DIV_UNITS","APPROVED_SCIENCE_UNITS","UPPER_DIV_UNITS","WRITING_INTENSIVE_UNITS","CORE_ELECTIVE_UNITS","APPLIED_ELECTIVE_UNITS","process","REACT_APP_API_BASE_URL","API","REACT_APP_API_BASE_URL_DEV","axios","create","baseURL","fetchUser","get","withCredentials","getCurrentCourses","userID","params","ID","getCompletedCourses","addCurrentCourse","config","post","addCompletedCourse","deleteCurrentCourse","delete","data","deleteCompletedCourse","updateCurrentCourse","newCourse","oldCourse","put","updateCompletedCourse","uploadTranscript","formData","initialState","REACT_APP_LOGIN_CALLBACK_URL","REACT_APP_LOGOUT_CALLBACK_URL","REACT_APP_LOGIN_CALLBACK_URL_DEV","myContext","REACT_APP_LOGOUT_CALLBACK_URL_DEV","createContext","Context","props","useState","localStorage","getItem","user","setUser","undefined","setGeCourses","setMajorCourses","majorRemainingUnits","setMajorRemainingUnits","geRemainingUnits","setGeRemainingUnits","percentCompleted","setPercentCompleted","useReducer","dispatch","useEffect","api","then","res","setItem","JSON","stringify","parse","googleId","map","dept","number","termYear","term","year","toString","majorUnitsRemaining","geUnitsRemaining","remainingCategory","GE_TOTAL_UNITS_REQUIRED","toFixed","calculatePercentageCompleted","updateUserAfterTranscriptUpload","a","clear","useCallback","response","headers","Provider","value","loading","handleLogin","window","location","href","handleLogout","handleMajorRemainingUnits","handleGeRemainingUnits","children","Navigation","useContext","Navbar","className","collapseOnSelect","expand","variant","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","DropdownButton","Dropdown","Item","Link","onClick","Login","Row","Col","md","Card","Body","Title","Button","Progress","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","ProgressBar","now","StudentInfo","GPA","setGPA","studentId","courses","useMemo","points","earned","calculatePoints","calculateEarned","name","Subtitle","style","paddingRight","useStyles","makeStyles","theme","container","display","flexWrap","flexDirection","formControl","margin","spacing","minWidth","DialogSelect","open","handleDialogClose","handleDialogConfirm","courseTitle","handleGradeChange","classes","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","onChange","input","Input","MenuItem","DialogActions","color","formatTime","time","hh","m","dd","h","replacement","CurrentSchedule","courseData","setCourseData","currentTerm","setIsLoading","setCourseTitle","setGrade","setOpen","anchorEl","setAnchorEl","selectedRow","setSelectedRow","confirm","useConfirm","section","startTime","endTime","days","join","tableData","setTableData","markAsComplete","totalUnits","reduce","sum","obj","handleMenuClose","valuesToRemove","dataDelete","i","indexOf","includes","handleCourseUpdate","dataUpdate","columns","field","cellStyle","whiteSpace","lookup","0","1","2","3","4","5","options","actionsColumnIndex","emptyRowsWhenPaging","editable","onRowUpdate","Promise","resolve","reject","actions","icon","MoreVertIcon","tooltip","event","rowData","currentTarget","Menu","keepMounted","Boolean","description","catch","e","console","log","target","GeRemaining","Table","striped","hover","bordered","responsive","startsWith","MajorRemaining","colSpan","RemainingCourses","MajorRequirements","maxheight","GeRequirements","Requirements","Dashboard","setType","ToggleButtonGroup","defaultValue","ToggleButton","MajorHistory","A","B","C","D","F","W","CR","NC","width","selection","localization","header","evt","oldData","handleCourseDelete","GeHistory","A1","A2","A3","B1","B2","B3","B4","C1","C2","C3","D1","D2","D3","E","OtherHistory","CourseHistory","history","useHistory","size","useTrait","initialValue","trait","updateTrait","current","set","newValue","root","alignItems","wrapper","position","buttonSuccess","backgroundColor","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","marginLeft","CircularIntegration","success","handleButtonClick","isTranscriptSubmit","buttonClassname","clsx","Fab","aria-label","CircularProgress","Accept","handleFileChange","onDrop","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFilesItems","file","path","dragStatus","Alert","elevation","MySnackbar","severity","handleClose","Snackbar","autoHideDuration","CompletedCourseForm","setSuccess","setSeverity","setError","setIsTranscriptSubmit","selectedFile","setSelectedFile","courseType","formik","useFormik","initialValues","courseNumber","courseDept","courseUnits","courseTerm","courseYear","courseDesignation","courseAdditionalReq","courseGrade","validationSchema","Yup","required","typeError","onSubmit","values","handleSubmit","message","checkMimeType","Error","handleUploadClick","preventDefault","FormData","append","Form","val","Group","controlId","Label","Control","getFieldProps","touched","errors","as","slice","ge","reason","CurrentCourseForm","courseStartTime","courseEndTime","courseDays","timePickerStartTime","setTimePickerStartTime","timePickerEndTime","setTimePickerEndTime","courseSection","getTime","dateTime","seconds","date","Date","hour","getHours","minutes","getMinutes","length","newCourseType","start","end","step","newCourseStartTime","onBlur","handleBlur","newCourseEndTime","newCourseDays","SchoolYear","handleAddTerm","handleTermChange","handleYearChange","validated","noValidate","Feedback","ExportPdf","Object","entries","key","items","item","to","masterList","concat","exportButton","Roadmap","initialTable","termList","setTermList","setTerm","setYear","setShow","setValidated","onDragEnd","result","source","destination","droppableId","sourceColumn","destColumn","sourceItems","destItems","index","removed","column","copiedItems","checkValidity","stopPropagation","prevState","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","pathname","placeholder","xs","snapshot","background","isDraggingOver","padding","minHeight","userSelect","isDragging","PrivateRoute","Component","component","rest","render","AppRoutes","from","exact","App","defaultOptions","confirmationButtonProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f456f1ab.chunk.js","sourcesContent":["const AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_COURSE':\n      return {\n        ...state,\n        // userCourses: state.userCourses.filter(\n        //   (course) => course._id !== action.payload\n        // ),\n        isLoading: false,\n      }\n    case 'ADD_CURRENT_COURSE':\n      return {\n        ...state,\n        currentCourses: [...state.currentCourses, action.payload],\n        isLoading: false,\n      }\n    case 'ADD_COMPLETED_COURSE':\n      return {\n        ...state,\n        completedCourses: [...state.completedCourses, action.payload],\n        isLoading: false,\n      }\n    case 'UPDATE_COURSE':\n      return {\n        ...state,\n        isLoading: false,\n      }\n    case 'GET_CURRENT_COURSES':\n      return {\n        ...state,\n        isLoading: false,\n        currentCourses: action.payload,\n      }\n    case 'GET_COMPLETED_COURSES':\n      return {\n        ...state,\n        isLoading: false,\n        completedCourses: action.payload,\n      }\n    case 'COURSE_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default AppReducer\n","export const geReqData = [\n  {\n    course: 'Oral Communication',\n    units: 3,\n    designation: 'A1',\n    category: 'A',\n  },\n  {\n    course: 'Written Communication',\n    units: 3,\n    designation: 'A2',\n    category: 'A',\n  },\n  {\n    course: 'Critical Thinking',\n    units: 3,\n    designation: 'A3',\n    category: 'A',\n  },\n  {\n    course: 'Physical Science',\n    units: 4,\n    designation: 'B1',\n    category: 'B',\n  },\n  {\n    course: 'Life Science',\n    units: 4,\n    designation: 'B2',\n    category: 'B',\n  },\n  {\n    course: 'Laboratory Experience',\n    units: 0,\n    designation: 'B3',\n    category: 'B',\n  },\n  {\n    course: 'Mathematics/Quantitative Reasoning',\n    units: 3,\n    designation: 'B4',\n    category: 'B',\n  },\n  {\n    course: 'Arts',\n    units: 3,\n    designation: 'C1',\n    category: 'C',\n  },\n  {\n    course: 'Humanities',\n    units: 3,\n    designation: 'C2',\n    category: 'C',\n  },\n  {\n    course: 'Arts / Humanities',\n    units: 3,\n    designation: 'C3',\n    category: 'C',\n  },\n  {\n    course: 'US History',\n    units: 3,\n    designation: 'D1',\n    category: 'D',\n  },\n  {\n    course: 'Constitution and American Ideals',\n    units: 3,\n    designation: 'D2',\n    category: 'D',\n  },\n  {\n    course: 'Social Sciences and Citizenship',\n    units: 3,\n    designation: 'D3',\n    category: 'D',\n  },\n  {\n    course: 'E',\n    units: 1,\n    designation: 'E',\n    category: 'E',\n  },\n  {\n    course: 'F',\n    units: 3,\n    designation: 'F',\n    category: 'F',\n  },\n  {\n    course: 'Global Issues',\n    units: 3,\n    designation: 'Global Issues',\n    category: 'Additional Req',\n  },\n  {\n    course: 'Human Diversity',\n    units: 3,\n    designation: 'Human Diversity',\n    category: 'Additional Req',\n  },\n]\n","import { geReqData } from '../../../Requirements/GeRequirements/GeReqData'\n\nconst getGeRemaining = (geCourses, majorCourses) => {\n  let geEUnitCount = 0\n  let geFUnitCount = 0\n  const CAT_E = 3\n  const CAT_F = 9\n\n  let geRemaining = []\n\n  // check main requirements\n  for (const requirement of geReqData) {\n    let matched = false\n\n    for (const course of geCourses) {\n      if (\n        course.designation === requirement.designation &&\n        (course.grade === 'A' ||\n          course.grade === 'B' ||\n          course.grade === 'C' ||\n          course.grade === 'CR')\n      ) {\n        matched = true\n        break\n      }\n    }\n\n    if (matched) {\n      continue\n    } else {\n      geRemaining.push(requirement)\n    }\n  }\n\n  // check additional requirements\n  for (const course of geCourses) {\n    if (\n      course.additionalReq === 'Global Issues' ||\n      course.additionalReq === 'Human Diversity'\n    ) {\n      geRemaining = geRemaining.filter((requirement) => {\n        if (course.additionalReq === requirement.designation) {\n          return false\n        } else {\n          return true\n        }\n      })\n    }\n  }\n\n  // takes care of life science, physical science and lab exp\n  for (const requirement of geRemaining) {\n    for (const course of majorCourses) {\n      if (course.designation === requirement.course) {\n        const idx = geRemaining.findIndex(() => {\n          return course.designation === requirement.course\n        })\n        // TODO: remove science and lab, may introduce error\n        geRemaining.splice(idx, 2)\n        break\n      }\n    }\n  }\n\n  // accumulate E and F units\n  majorCourses.forEach((course) => {\n    if (course.course.split(' -')[0] === 'CECS 105') {\n      geEUnitCount += 1\n    } else if (course.course.split(' -')[0] === 'ENGR 101') {\n      geEUnitCount += 1\n    } else if (course.course.split(' -')[0] === 'ENGR 102') {\n      geEUnitCount += 1\n    }\n  })\n\n  majorCourses.forEach((course) => {\n    if (course.course.split(' -')[0] === 'CECS 491A') {\n      geFUnitCount += 3\n    } else if (course.course.split(' -')[0] === 'CECS 491B') {\n      geFUnitCount += 3\n    } else if (course.course.split(' -')[0] === 'ENGR 361') {\n      geFUnitCount += 3\n    } else if (course.course.split(' -')[0] === 'ENGR 390') {\n      geFUnitCount += 3\n    }\n  })\n\n  // check for correct amount of E and F units\n  for (const requirement of geRemaining) {\n    if (geEUnitCount === 3) {\n      const idx = geRemaining.findIndex(() => {\n        return requirement.designation === 'E'\n      })\n      geRemaining.splice(idx, 1)\n    }\n  }\n\n  for (const requirement of geRemaining) {\n    if (geFUnitCount === 9) {\n      const idx = geRemaining.findIndex(() => {\n        return requirement.designation === 'F'\n      })\n      geRemaining.splice(idx, 1)\n    }\n  }\n\n  return {\n    geRemaining,\n    CAT_E,\n    CAT_F,\n    geEUnitCount,\n    geFUnitCount,\n  }\n}\n\nexport default getGeRemaining\n","export const majorReqData = [\n  {\n    course: 'CECS 100',\n    title: 'Critical Thinking in the Digital Information Age',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39965',\n  },\n  {\n    course: 'CECS 105',\n    title: 'Introduction to Computer Engineering and Computer Science',\n    units: 1,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39966',\n  },\n  {\n    course: 'CECS 174',\n    title: 'Introduction to Programming and Problem Solving',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39968',\n  },\n  {\n    course: 'CECS 225',\n    title: 'Digital Logic and Assembly Programming',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39973',\n  },\n  {\n    course: 'CECS 228',\n    title: 'Discrete Structures with Computing Applications',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39974',\n  },\n  {\n    course: 'CECS 229',\n    title: 'Discrete Structures with Computing Applications II',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39975',\n  },\n  {\n    course: 'CECS 274',\n    title: 'Data Structures',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39978',\n  },\n  {\n    course: 'CECS 277',\n    title: 'Object Oriented Application Development',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39980',\n  },\n  {\n    course: 'CECS 282',\n    title: 'Advanced C++',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39979',\n  },\n  {\n    course: 'ENGR 101',\n    title: 'Introduction to the Engineering Profession',\n    units: 1,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41479',\n  },\n  {\n    course: 'ENGR 102',\n    title: 'Academic Success Skills',\n    units: 1,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41480',\n  },\n  {\n    course: 'MATH 122',\n    title: 'Calculus I',\n    units: 4,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=42941',\n  },\n  {\n    course: 'MATH 123',\n    title: 'Calculus II',\n    units: 4,\n    designation: 'Lower Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=42942',\n  },\n  {\n    course: 'PHYS 151',\n    title: 'Mechanics and Heat',\n    units: 4,\n    designation: 'Physical Science',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=43489',\n  },\n  {\n    course: 'CHEM 111A',\n    title: 'General Chemistry',\n    units: 5,\n    designation: 'Physical Science',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40229',\n  },\n  {\n    course: 'BIOL 153',\n    title: 'Introduction to Marine Biology',\n    units: 3,\n    designation: 'Life Science',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39572',\n  },\n  {\n    course: 'BIOL 200',\n    title: 'General Biology',\n    units: 4,\n    designation: 'Life Science',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39573',\n  },\n  {\n    course: 'BIOL 205',\n    title: 'Human Biology',\n    units: 4,\n    designation: 'Life Science',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39574',\n  },\n  {\n    course: 'BIOL 207',\n    title: 'Human Physiology',\n    units: 4,\n    designation: 'Life Science',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39575',\n  },\n  {\n    course: 'CECS 323',\n    title: 'Database Fundamentals',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39988',\n  },\n  {\n    course: 'CECS 326',\n    title: 'Operating Systems',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39989',\n  },\n  {\n    course: 'CECS 327',\n    title: 'Introduction to Networks and Distributed Computing',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39990',\n  },\n  {\n    course: 'CECS 328',\n    title: 'Algorithms',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39991',\n  },\n  {\n    course: 'CECS 329',\n    title: 'Concepts of Computer Science Theory',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=53069',\n  },\n  {\n    course: 'CECS 341',\n    title: 'Computer Architecture and Organization',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39992',\n  },\n  {\n    course: 'CECS 342',\n    title: 'Principles of Programming Languages',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=53070',\n  },\n  {\n    course: 'CECS 343',\n    title: 'Introduction to Software Engineering',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39993',\n  },\n  {\n    course: 'CECS 378',\n    title: 'Introduction to Computer Security Principles',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39997',\n  },\n  {\n    course: 'EE 381',\n    title: 'Probability and Statistics with Applications to Computing',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40854',\n  },\n  {\n    course: 'ENGR 350',\n    title: 'Computers, Ethics and Society',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41489',\n  },\n  {\n    course: 'CECS 491A',\n    title: 'Computer Science Senior Project I',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40089',\n  },\n  {\n    course: 'CECS 491B',\n    title: 'Computer Science Senior Project II',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40090',\n  },\n  {\n    course: 'ENGR 361',\n    title: 'Scientific Research Communication',\n    units: 3,\n    designation: 'Writing Intensive',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=44730',\n  },\n  {\n    course: 'ENGR 390',\n    title: 'Information and Communication Technology for Sustainability',\n    units: 3,\n    designation: 'Writing Intensive',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41493',\n  },\n  {\n    course: 'MATH 323',\n    title: 'Introduction to Numerical Analysis',\n    units: 4,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=42952',\n  },\n  {\n    course: 'CECS 419',\n    title: 'Theory of Computation',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40001',\n  },\n  {\n    course: 'CECS 428',\n    title: 'Analysis of Algorithms',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40003',\n  },\n  {\n    course: 'CECS 429',\n    title: 'Search Engine Technology',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40004',\n  },\n  {\n    course: 'CECS 444',\n    title: 'Compiler Construction',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40006',\n  },\n  {\n    course: 'CECS 445',\n    title: 'Software Design and Architecture',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40007',\n  },\n  {\n    course: 'CECS 448',\n    title: 'User Interface Design',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40009',\n  },\n  {\n    course: 'CECS 449',\n    title: 'Computer Graphics',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40010',\n  },\n  {\n    course: 'CECS 451',\n    title: 'Artificial Intelligence',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40011',\n  },\n  {\n    course: 'CECS 455',\n    title: 'Introduction to Game Programming',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40013',\n  },\n  {\n    course: 'CECS 456',\n    title: 'Machine Learning',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=44683',\n  },\n  {\n    course: 'CECS 474',\n    title: 'Computer Network Interoperability',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40018',\n  },\n  {\n    course: 'CECS 478',\n    title: 'Introduction to Computer Security',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40021',\n  },\n  {\n    course: 'CECS 495',\n    title: 'Computational Physiology',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40022',\n  },\n  {\n    course: 'CECS 497',\n    title: 'Directed Studies',\n    units: '1-3',\n    designation: 'Core Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40024',\n  },\n  {\n    course: 'CECS 303',\n    title: 'Networks and Network Security',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39986',\n  },\n  {\n    course: 'CECS 450',\n    title: 'Data Visualization',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=44679',\n  },\n  {\n    course: 'CECS 453',\n    title: 'Mobile Application Development',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40012',\n  },\n  {\n    course: 'CECS 461',\n    title: 'Hardware/Software Co-design',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40015',\n  },\n  {\n    course: 'CECS 470',\n    title: 'Web Programming and Accessibility',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40017',\n  },\n  {\n    course: 'CECS 475',\n    title: 'Software Development with Frameworks',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40019',\n  },\n  {\n    course: 'CECS 476',\n    title: 'System and Network Administration',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n      'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40020',\n  },\n]\n\nexport const majorReqCategory = [\n  'Lower Div',\n  'Upper Div',\n  'Physical Science',\n  'Life Science',\n  'Writing Intensive',\n  'Core Elective',\n  'Applied Elective',\n]\n","import { majorReqData } from '../../../Requirements/MajorRequirements/CecsReqData'\n\nconst getMajorRemaining = (majorCourses) => {\n  const LOWER_DIV_UNITS = 35\n  const APPROVED_SCIENCE_UNITS = 8\n  const UPPER_DIV_UNITS = 39\n  const WRITING_INTENSIVE_UNITS = 3\n  const CORE_ELECTIVE_UNITS = 6\n  const APPLIED_ELECTIVE_UNITS = 3\n\n  let lowerDivUnitCount = 0\n  let approvedScienceUnitCount = 0\n  let upperDivUnitCount = 0\n  let writingIntensiveUnitCount = 0\n  let coreElectiveUnitCount = 0\n  let appliedElectiveUnitCount = 0\n\n  for (const course of majorCourses) {\n    if (course.grade === 'A' || course.grade === 'B' || course.grade === 'C') {\n      switch (course.designation) {\n        case 'Lower Div':\n          lowerDivUnitCount += course.units\n          break\n        case 'Physical Science':\n          approvedScienceUnitCount += course.units\n          break\n        case 'Life Science':\n          approvedScienceUnitCount += course.units\n          break\n        case 'Upper Div':\n          upperDivUnitCount += course.units\n          break\n        case 'Writing Intensive':\n          writingIntensiveUnitCount += course.units\n          break\n        case 'Core Elective':\n          coreElectiveUnitCount += course.units\n          break\n        case 'Applied Elective':\n          appliedElectiveUnitCount += course.units\n          break\n        default:\n          break\n      }\n    }\n    continue\n  }\n\n  // check if loop is necessary\n  //    if it is, check if course has been completed\n  //    if it is not, return true to skip that category\n  const compareUnitCount = (reqCourse, completedCourse) => {\n    switch (reqCourse.designation) {\n      case 'Lower Div':\n        if (lowerDivUnitCount !== LOWER_DIV_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      case 'Physical Science':\n        if (approvedScienceUnitCount !== APPROVED_SCIENCE_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      case 'Life Science':\n        if (approvedScienceUnitCount !== APPROVED_SCIENCE_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      case 'Upper Div':\n        if (upperDivUnitCount !== UPPER_DIV_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      case 'Writing Intensive':\n        if (writingIntensiveUnitCount !== WRITING_INTENSIVE_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      case 'Core Elective':\n        if (coreElectiveUnitCount !== CORE_ELECTIVE_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      case 'Applied Elective':\n        if (appliedElectiveUnitCount !== APPLIED_ELECTIVE_UNITS) {\n          return (\n            completedCourse.course.split(' ')[1] ===\n            reqCourse.course.split(' ')[1]\n          )\n        }\n        break\n      default:\n        break\n    }\n    return true\n  }\n\n  const addToRemaining = (reqCourse) => {\n    return !majorCourses.some((completedCourse) =>\n      compareUnitCount(reqCourse, completedCourse)\n    )\n  }\n\n  const majorRemaining = majorReqData.filter((reqCourse) =>\n    addToRemaining(reqCourse)\n  )\n\n  return {\n    majorRemaining,\n    lowerDivUnitCount,\n    approvedScienceUnitCount,\n    upperDivUnitCount,\n    writingIntensiveUnitCount,\n    coreElectiveUnitCount,\n    appliedElectiveUnitCount,\n    LOWER_DIV_UNITS,\n    APPROVED_SCIENCE_UNITS,\n    UPPER_DIV_UNITS,\n    WRITING_INTENSIVE_UNITS,\n    CORE_ELECTIVE_UNITS,\n    APPLIED_ELECTIVE_UNITS,\n  }\n}\n\nexport default getMajorRemaining\n","import axios from 'axios'\n\nconst { REACT_APP_API_BASE_URL, REACT_APP_API_BASE_URL_DEV } = process.env\n\nconst API = axios.create({\n  baseURL: REACT_APP_API_BASE_URL,\n})\n\n// Login/Logout\nexport const googleLogout = () => {\n  return API.get('/auth/logout', { withCredentials: true })\n}\n\n// Get user\nexport const fetchUser = () => {\n  return API.get('/user', { withCredentials: true })\n}\n// Get courses\nexport const getCurrentCourses = (userID) => {\n  return API.get('/course/current', {\n    params: {\n      ID: userID,\n    },\n  })\n}\n\nexport const getCompletedCourses = (userID) => {\n  return API.get('/course/completed', {\n    params: {\n      ID: userID,\n    },\n  })\n}\n\n// Add courses\nexport const addCurrentCourse = (course, config) => {\n  return API.post('/course/current', course, config)\n}\n\nexport const addCompletedCourse = (course, config) => {\n  return API.post('/course/completed', course, config)\n}\n\n// Delete courses\nexport const deleteCurrentCourse = (payload, config) => {\n  return API.delete('/course/delete-current', { data: payload }, config)\n}\nexport const deleteCompletedCourse = (payload, config) => {\n  return API.delete('/course/delete-completed', { data: payload }, config)\n}\n\n// Update courses\nexport const updateCurrentCourse = ({ newCourse, oldCourse }, config) => {\n  return API.put('/course/current', { newCourse, oldCourse }, config)\n}\n\nexport const updateCompletedCourse = ({ newCourse, oldCourse }, config) => {\n  return API.put('/course/completed', { newCourse, oldCourse }, config)\n}\n\n// Upload Transcript\nexport const uploadTranscript = (formData) => {\n  return API.post('/course/upload', formData)\n}\n","import React, {\n  createContext,\n  useEffect,\n  useState,\n  useReducer,\n  useCallback,\n} from 'react'\n\nimport AppReducer from './AppReducer'\nimport getGeRemaining from '../components/Tables/RemainingCourses/GeRemaining/getGeRemaining/getGeRemaining'\nimport getMajorRemaining from '../components/Tables/RemainingCourses/MajorRemaining/getMajorRemaining/getMajorRemaining'\n\nimport * as api from '../api'\n\nconst initialState = {\n  completedCourses: [],\n  currentCourses: [],\n  error: null,\n  isLoading: true,\n}\n\nconst {\n  REACT_APP_LOGIN_CALLBACK_URL,\n  REACT_APP_LOGIN_CALLBACK_URL_DEV,\n  REACT_APP_LOGOUT_CALLBACK_URL,\n  REACT_APP_LOGOUT_CALLBACK_URL_DEV,\n} = process.env\n\n// Create Context\nexport const myContext = createContext(initialState)\n\n// Provider Component\nexport default function Context(props) {\n  const [user, setUser] = useState(localStorage.getItem('user'))\n  const [geCourses, setGeCourses] = useState(undefined)\n  const [majorCourses, setMajorCourses] = useState(undefined)\n  const [majorRemainingUnits, setMajorRemainingUnits] = useState(0)\n  const [geRemainingUnits, setGeRemainingUnits] = useState(0)\n  const [percentCompleted, setPercentCompleted] = useState(undefined)\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n\n  // actions\n  // Auth\n  const handleLogin = () => {\n    window.location.href = REACT_APP_LOGIN_CALLBACK_URL\n  }\n  const handleLogout = () => {\n    api.googleLogout().then((res) => {\n      if (res.data === 'done') {\n        localStorage.clear()\n        window.location.href = REACT_APP_LOGOUT_CALLBACK_URL\n      }\n    })\n  }\n\n  useEffect(() => {\n    api.fetchUser().then((res) => {\n      if (res.data) {\n        localStorage.setItem('user', JSON.stringify(res.data))\n        setUser(localStorage.getItem('user'))\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    if (user) {\n      const userID = JSON.parse(user).googleId\n\n      setGeCourses(\n        state.completedCourses\n          .filter((course) => {\n            return course.type === 'ge' && course.designation !== ''\n          })\n          .map((course) => {\n            return {\n              userID: userID,\n              type: course.type,\n              course: course.dept + ' ' + course.number + ' - ' + course.title,\n              grade: course.grade,\n              units: course.units,\n              designation: course.designation,\n              additionalReq: course.additionalReq,\n              termYear: course.term + ' ' + course.year.toString(),\n            }\n          })\n      )\n\n      setMajorCourses(\n        state.completedCourses\n          .filter((course) => {\n            return course.type === 'major' && course.designation !== ''\n          })\n          .map((course) => {\n            return {\n              userID: userID,\n              type: course.type,\n              course: course.dept + ' ' + course.number + ' - ' + course.title,\n              grade: course.grade,\n              units: course.units,\n              designation: course.designation,\n              additionalReq: course.additionalReq,\n              termYear: course.term + ' ' + course.year.toString(),\n            }\n          })\n      )\n    }\n  }, [user, state.completedCourses])\n\n  useEffect(() => {\n    let majorUnitsRemaining = 0\n    let geUnitsRemaining = 0\n\n    if (geCourses && majorCourses) {\n      const {\n        geRemaining,\n        CAT_E,\n        CAT_F,\n        geEUnitCount,\n        geFUnitCount,\n      } = getGeRemaining(geCourses, majorCourses)\n\n      const {\n        lowerDivUnitCount,\n        approvedScienceUnitCount,\n        upperDivUnitCount,\n        writingIntensiveUnitCount,\n        coreElectiveUnitCount,\n        appliedElectiveUnitCount,\n        LOWER_DIV_UNITS,\n        APPROVED_SCIENCE_UNITS,\n        UPPER_DIV_UNITS,\n        WRITING_INTENSIVE_UNITS,\n        CORE_ELECTIVE_UNITS,\n        APPLIED_ELECTIVE_UNITS,\n      } = getMajorRemaining(majorCourses)\n\n      majorUnitsRemaining += LOWER_DIV_UNITS - lowerDivUnitCount\n      majorUnitsRemaining += APPROVED_SCIENCE_UNITS - approvedScienceUnitCount\n      majorUnitsRemaining += UPPER_DIV_UNITS - upperDivUnitCount\n      majorUnitsRemaining += WRITING_INTENSIVE_UNITS - writingIntensiveUnitCount\n      majorUnitsRemaining += CORE_ELECTIVE_UNITS - coreElectiveUnitCount\n      majorUnitsRemaining += APPLIED_ELECTIVE_UNITS - appliedElectiveUnitCount\n\n      geUnitsRemaining += CAT_E - geEUnitCount\n      geUnitsRemaining += CAT_F - geFUnitCount\n\n      for (const remainingCategory of geRemaining) {\n        if (\n          remainingCategory.course === 'Human Diversity' ||\n          remainingCategory.course === 'Global Issues' ||\n          remainingCategory.course === 'E' ||\n          remainingCategory.course === 'F'\n        ) {\n          continue\n        } else {\n          geUnitsRemaining += remainingCategory.units\n        }\n      }\n    }\n\n    setGeRemainingUnits(geUnitsRemaining)\n    setMajorRemainingUnits(majorUnitsRemaining)\n  }, [geCourses, majorCourses])\n\n  useEffect(() => {\n    const calculatePercentageCompleted = () => {\n      if (geRemainingUnits && majorRemainingUnits) {\n        const GE_TOTAL_UNITS_REQUIRED = 50\n        const MAJOR_TOTAL_UNITS_REQUIRED = 94\n        const TOTAL_UNITS_REQUIRED =\n          GE_TOTAL_UNITS_REQUIRED + MAJOR_TOTAL_UNITS_REQUIRED\n\n        const totalRemainingUnits = geRemainingUnits + majorRemainingUnits\n\n        setPercentCompleted(\n          (\n            ((TOTAL_UNITS_REQUIRED - totalRemainingUnits) /\n              TOTAL_UNITS_REQUIRED) *\n            100\n          ).toFixed(2)\n        )\n      }\n    }\n    calculatePercentageCompleted()\n  }, [geRemainingUnits, majorRemainingUnits])\n\n  const updateUserAfterTranscriptUpload = async () => {\n    localStorage.clear()\n    await api.fetchUser().then((res) => {\n      if (res.data) {\n        localStorage.setItem('user', JSON.stringify(res.data))\n        setUser(localStorage.getItem('user'))\n      }\n    })\n  }\n\n  const handleGeRemainingUnits = (units) => {\n    setGeRemainingUnits(units)\n  }\n\n  const handleMajorRemainingUnits = (units) => {\n    setMajorRemainingUnits(units)\n  }\n\n  // Get courses\n  // useCallback to stabilize function on renders when called\n  const getCurrentCourses = useCallback(async (userID) => {\n    try {\n      const res = await api.getCurrentCourses(userID)\n\n      dispatch({\n        type: 'GET_CURRENT_COURSES',\n        payload: res.data.data,\n      })\n      return res\n    } catch (err) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: err.response.data.error,\n      })\n    }\n  }, [])\n\n  // useCallback to stabilize function on renders when called\n  const getCompletedCourses = useCallback(async (userID) => {\n    try {\n      const res = await api.getCompletedCourses(userID)\n\n      dispatch({\n        type: 'GET_COMPLETED_COURSES',\n        payload: res.data.data,\n      })\n      return res\n    } catch (err) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: err.response.data.error,\n      })\n    }\n  }, [])\n\n  // Delete courses\n  async function deleteCurrentCourse(data) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    try {\n      const res = await api.deleteCurrentCourse(data, config)\n\n      dispatch({\n        type: 'DELETE_COURSE',\n        payload: null,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: error.response.data.error,\n      })\n    }\n  }\n\n  async function deleteCompletedCourse(data) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    try {\n      const res = await api.deleteCompletedCourse(data, config)\n\n      dispatch({\n        type: 'DELETE_COURSE',\n        payload: null,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: error.response.data.error,\n      })\n    }\n  }\n\n  // Add courses\n  async function addCurrentCourse(course) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    try {\n      const res = await api.addCurrentCourse(course, config)\n\n      dispatch({\n        type: 'ADD_CURRENT_COURSE',\n        payload: res.data.data,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: error.response.data.error,\n      })\n    }\n  }\n\n  async function addCompletedCourse(course) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    try {\n      const res = await api.addCompletedCourse(course, config)\n\n      dispatch({\n        type: 'ADD_COMPLETED_COURSE',\n        payload: res.data.data,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: error.response.data.error,\n      })\n    }\n  }\n\n  // Update courses\n  async function updateCurrentCourse({ newCourse, oldCourse }) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    try {\n      const res = await api.updateCurrentCourse(\n        { newCourse, oldCourse },\n        config\n      )\n\n      dispatch({\n        type: 'UPDATE_COURSE',\n        payload: res.data.data,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: error.response.data.error,\n      })\n    }\n  }\n\n  async function updateCompletedCourse({ newCourse, oldCourse }) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    try {\n      const res = await api.updateCompletedCourse(\n        { newCourse, oldCourse },\n        config\n      )\n\n      dispatch({\n        type: 'UPDATE_COURSE',\n        payload: res.data.data,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        type: 'COURSE_ERROR',\n        payload: error.response.data.error,\n      })\n    }\n  }\n\n  return (\n    <myContext.Provider\n      value={{\n        user,\n        percentCompleted,\n        geCourses,\n        majorCourses,\n        currentCourses: state.currentCourses,\n        completedCourses: state.completedCourses,\n        loading: state.loading,\n        handleLogin,\n        handleLogout,\n        handleMajorRemainingUnits,\n        handleGeRemainingUnits,\n        getCompletedCourses,\n        getCurrentCourses,\n        addCurrentCourse,\n        addCompletedCourse,\n        deleteCurrentCourse,\n        deleteCompletedCourse,\n        updateCurrentCourse,\n        updateCompletedCourse,\n        updateUserAfterTranscriptUpload,\n      }}\n    >\n      {props.children}\n    </myContext.Provider>\n  )\n}\n","import React, { useContext } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nimport './Navigation.css'\nimport { myContext } from '../../context/Context'\n\nconst Navigation = () => {\n  const { user, handleLogout } = useContext(myContext)\n\n  return (\n    <Navbar className=\"nav-color\" collapseOnSelect expand=\"lg\" variant=\"light\">\n      <Container>\n        <Navbar.Brand href=\"/dashboard\">\n          Student Academic Dashboard\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav>\n            <DropdownButton id=\"add_course\" title=\"Add Course\">\n              <Dropdown.Item href=\"/add-current-course\">\n                Current Course\n              </Dropdown.Item>\n              <Dropdown.Item href=\"/add-completed-course\">\n                Completed Course\n              </Dropdown.Item>\n            </DropdownButton>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"/roadmap\">Roadmap</Nav.Link>\n          </Nav>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/history\">History</Nav.Link>\n          </Nav>\n          <Nav>\n            {user ? (\n              <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport { FaGoogle } from 'react-icons/fa'\n\nimport './Login.css'\n\nconst Login = ({ handleLogin }) => {\n  return (\n    <Container>\n      <Row className=\"d-flex mt-5 justify-content-center\">\n        <Col md={9}>\n          <Card className=\"text-center shadow\">\n            <Card.Body>\n              <Card.Title>Login to Student Academic Dashboard</Card.Title>\n              <Button\n                className=\"mb-3 mt-3\"\n                variant=\"primary\"\n                onClick={handleLogin}\n              >\n                <FaGoogle className=\"mb-1\" /> Sign in with Google\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Login\n","import React, { useContext } from 'react'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n\nimport './Progress.css'\nimport { myContext } from '../../context/Context'\n\nconst Progress = () => {\n  const { percentCompleted } = useContext(myContext)\n  const renderOverallProgress = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      Degree Completion: {percentCompleted}%\n    </Tooltip>\n  )\n\n  return (\n    <OverlayTrigger\n      placement=\"bottom\"\n      delay={{ show: 250, hide: 400 }}\n      overlay={renderOverallProgress}\n    >\n      <ProgressBar now={percentCompleted} />\n    </OverlayTrigger>\n  )\n}\n\nexport default Progress\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n\nimport Progress from '../../components/Progress/Progress'\nimport { myContext } from '../../context/Context'\n\nconst StudentInfo = () => {\n  const [GPA, setGPA] = useState(undefined)\n  const { user, completedCourses, getCompletedCourses } = useContext(myContext)\n  const userID = JSON.parse(user).googleId\n  const studentId = JSON.parse(user).studentId\n\n  useEffect(() => {\n    getCompletedCourses(userID)\n  }, [getCompletedCourses, userID])\n\n  const courses = useMemo(\n    () =>\n      completedCourses.map((course) => {\n        return {\n          userID: userID,\n          type: course.type,\n          course: course.dept + ' ' + course.number + ' - ' + course.title,\n          grade: course.grade,\n          units: course.units,\n          designation: course.designation,\n          additionalReq: course.additionalReq,\n          termYear: course.term + ' ' + course.year.toString(),\n        }\n      }),\n\n    [completedCourses, userID]\n  )\n\n  useEffect(() => {\n    let points = 0\n    let earned = 0\n    const calculatePoints = (grade, units) => {\n      switch (grade) {\n        case 'A':\n          return units * 4\n        case 'B':\n          return units * 3\n        case 'C':\n          return units * 2\n        default:\n          return 0\n      }\n    }\n    const calculateEarned = (grade, units) => {\n      switch (grade) {\n        case 'A':\n          return units\n        case 'B':\n          return units\n        case 'C':\n          return units\n        default:\n          return 0\n      }\n    }\n\n    courses.forEach((course) => {\n      points += calculatePoints(course.grade, course.units)\n      earned += calculateEarned(course.grade, course.units)\n    })\n\n    const calculateGPA = () => {\n      setGPA(points / earned)\n    }\n\n    calculateGPA()\n  }, [courses])\n\n  const renderTotalGpaTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      Total GPA\n    </Tooltip>\n  )\n\n  const renderCurrentGpaTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      Current GPA\n    </Tooltip>\n  )\n\n  const renderStudentIdTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      Student ID\n    </Tooltip>\n  )\n\n  return (\n    <>\n      {/* student info */}\n      <div className=\"shadow-sm\">\n        <Row>\n          <Col>\n            <Card className=\"d-flex flex-row\">\n              <Col>\n                <Card.Body>\n                  <Card.Title>\n                    {user ? JSON.parse(user).name : 123456789}\n                  </Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    <OverlayTrigger\n                      placement=\"bottom\"\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={renderStudentIdTooltip}\n                    >\n                      <span>{studentId === '0' ? '-' : studentId}</span>\n                    </OverlayTrigger>\n                  </Card.Subtitle>\n                </Card.Body>\n              </Col>\n              <Col className=\"d-flex\">\n                <Card.Body className=\"d-flex flex-column\">\n                  <Card.Title\n                    className=\"d-flex justify-content-end\"\n                    style={{ paddingRight: '1.2rem' }}\n                  >\n                    GPA\n                  </Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted d-flex justify-content-end pr-2\">\n                    <OverlayTrigger\n                      placement=\"bottom\"\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={renderCurrentGpaTooltip}\n                    >\n                      <span>{GPA ? GPA.toFixed(2) : '-'}</span>\n                    </OverlayTrigger>\n                    /\n                    <OverlayTrigger\n                      placement=\"bottom\"\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={renderTotalGpaTooltip}\n                    >\n                      <span>4.0</span>\n                    </OverlayTrigger>\n                  </Card.Subtitle>\n                </Card.Body>\n              </Col>\n            </Card>\n          </Col>\n        </Row>\n        <Progress />\n      </div>\n    </>\n  )\n}\n\nexport default StudentInfo\n","import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}))\n\nexport default function DialogSelect({\n  open,\n  handleDialogClose,\n  handleDialogConfirm,\n  courseTitle,\n  grade,\n  handleGradeChange,\n}) {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={open}\n        onClose={handleDialogClose}\n      >\n        <DialogTitle>Enter Grade for {courseTitle.split('-')[0]}</DialogTitle>\n        <DialogContent>\n          <form className={classes.container}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"grade\">Grade</InputLabel>\n              <Select\n                labelId=\"demo-dialog-select-label\"\n                id=\"demo-dialog-select\"\n                value={grade}\n                onChange={handleGradeChange}\n                input={<Input />}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"A\">A</MenuItem>\n                <MenuItem value=\"B\">B</MenuItem>\n                <MenuItem value=\"C\">C</MenuItem>\n                <MenuItem value=\"D\">D</MenuItem>\n                <MenuItem value=\"F\">F</MenuItem>\n                <MenuItem value=\"W\">W</MenuItem>\n                <MenuItem value=\"CR\">CR</MenuItem>\n                <MenuItem value=\"NC\">NC</MenuItem>\n              </Select>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDialogConfirm} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","const formatTime = (time) => {\n  const hh = time.split(':')[0]\n  const m = time.split(':')[1]\n  let dd = 'AM'\n  let h = hh\n  if (h >= 12) {\n    h = hh - 12\n    dd = 'PM'\n  }\n  if (h === 0) {\n    h = 12\n  }\n\n  if (h < 10 && dd === 'AM') {\n    h = h.toString().split('')[1]\n  }\n\n  let replacement = h + ':' + m\n  replacement += ' ' + dd\n\n  return replacement\n}\n\nexport default formatTime\n","import '../../../utility/css/table-fixed-height.css'\n\nimport MaterialTable from 'material-table'\nimport { useConfirm } from 'material-ui-confirm'\nimport React, { useContext, useEffect, useMemo, useState } from 'react'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport { Menu, MenuItem } from '@material-ui/core'\n\nimport { myContext } from '../../../context/Context'\nimport DialogSelect from '../../../utility/DialogSelect/DialogSelect'\nimport formatTime from '../../../utility/formatTime/formatTime'\n\nconst CurrentSchedule = () => {\n  const {\n    user,\n    currentCourses,\n    getCurrentCourses,\n    updateCurrentCourse,\n    deleteCurrentCourse,\n  } = useContext(myContext)\n\n  const [courseData, setCourseData] = useState({})\n\n  const currentTerm = 'Spring'\n  const currentYear = 2021\n  const [isLoading, setIsLoading] = useState(true)\n  const [courseTitle, setCourseTitle] = useState(undefined)\n  const [grade, setGrade] = useState('')\n  const [open, setOpen] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [selectedRow, setSelectedRow] = useState(undefined)\n\n  const userID = JSON.parse(user).googleId\n  const confirm = useConfirm()\n\n  useEffect(() => {\n    // set state of currentCourses inside context via reducer\n    getCurrentCourses(userID)\n    setIsLoading(false)\n  }, [getCurrentCourses, userID, setIsLoading])\n\n  const columns = [\n    {\n      title: 'Course',\n      field: 'course',\n      cellStyle: {\n        whiteSpace: 'nowrap',\n      },\n    },\n    {\n      title: 'section',\n      field: 'section',\n    },\n    {\n      title: 'Units',\n      field: 'units',\n      lookup: {\n        0: '0',\n        1: '1',\n        2: '2',\n        3: '3',\n        4: '4',\n        5: '5',\n      },\n    },\n    {\n      title: 'Start',\n      field: 'startTime',\n      cellStyle: {\n        whiteSpace: 'nowrap',\n      },\n    },\n    {\n      title: 'End',\n      field: 'endTime',\n      cellStyle: {\n        whiteSpace: 'nowrap',\n      },\n    },\n    {\n      title: 'Days',\n      field: 'days',\n    },\n    {\n      title: 'Location',\n      field: 'location',\n    },\n  ]\n\n  // memoize courses so does not change on rerenders\n  const courses = useMemo(\n    () =>\n      currentCourses.map((course) => ({\n        userID,\n        type: course.type,\n        course: `${course.dept} ${course.number} - ${course.title}`,\n        section: course.section,\n        units: course.units,\n        startTime: formatTime(course.startTime),\n        endTime: formatTime(course.endTime),\n        days: course.days.join('/'),\n        location: course.location,\n        designation: course.designation,\n        additionalReq: course.additionalReq,\n      })),\n    [currentCourses, userID]\n  )\n\n  // table rerendering bc tableData is changing\n  const [tableData, setTableData] = useState(courses)\n\n  useEffect(() => {\n    setTableData(courses)\n  }, [currentCourses, courses])\n\n  useEffect(() => {\n    async function markAsComplete() {\n      try {\n        // TODO: success alert\n        // const res = await addCompletedCourse(courseData)\n        // why is res undefined\n        // if (res.data.success === true) {\n        //   setSuccess(true)\n        //   setSeverity('success')\n        //   setOpen(true)\n        //   setIsLoading(false)\n        // }\n      } catch (error) {\n        console.log(error)\n        // setSeverity('error')\n        // setOpen(true)\n        // setError(error.message)\n      }\n    }\n    markAsComplete()\n  }, [courseData])\n\n  const totalUnits = currentCourses.reduce((sum, obj) => sum + obj.units, 0)\n\n  const handleMenuClick = (event, rowData) => {\n    setAnchorEl(event.currentTarget)\n    setSelectedRow(rowData)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleDialogClose = () => {\n    setOpen(false)\n  }\n\n  const handleDialogConfirm = async () => {\n    // delete server side\n    deleteCurrentCourse(selectedRow)\n\n    // delete from current\n    const valuesToRemove = []\n    let dataDelete = [...tableData]\n    valuesToRemove.push(selectedRow)\n    dataDelete = dataDelete.filter((i) => valuesToRemove.indexOf(i) === -1)\n    setTableData([...dataDelete])\n\n    // cause useEffect to add courseData to complete\n    setCourseData({\n      userID: JSON.parse(user).googleId,\n      type: selectedRow.type,\n      number: selectedRow.course.split(' ')[1],\n      dept: selectedRow.course.split(' ')[0],\n      title: selectedRow.course.split('- ')[1],\n      units: selectedRow.units,\n      term: currentTerm,\n      year: currentYear,\n      grade: grade,\n      // only ge desig will have '-'\n      designation: selectedRow.designation.split(' ').includes('-')\n        ? selectedRow.designation.split(' ')[0]\n        : selectedRow.designation,\n      additionalReq: selectedRow.additionalReq\n        ? selectedRow.additionalReq\n        : 'N/A',\n    })\n\n    setOpen(false)\n  }\n\n  const handleGradeChange = (event) => {\n    setGrade(event.target.value || '')\n  }\n\n  const handleCourseUpdate = (newCourse, oldCourse) => {\n    // change server side\n    updateCurrentCourse({ newCourse, oldCourse })\n\n    // change client side\n    const dataUpdate = [...tableData]\n    const index = oldCourse.tableData.id\n    dataUpdate[index] = newCourse\n    setTableData([...dataUpdate])\n    setIsLoading(false)\n  }\n\n  const handleCourseDelete = () => {\n    confirm({ description: 'Delete selected course' })\n      .then(() => {\n        // change server side\n        deleteCurrentCourse(selectedRow)\n\n        // change client side\n        const valuesToRemove = []\n        let dataDelete = [...tableData]\n        valuesToRemove.push(selectedRow)\n        dataDelete = dataDelete.filter((i) => valuesToRemove.indexOf(i) === -1)\n        setTableData([...dataDelete])\n\n        handleMenuClose()\n        setIsLoading(false)\n      })\n      .catch((e) => {\n        if (e) {\n          console.log(`error: ${e}`)\n        }\n        console.log('cancelled')\n        handleMenuClose()\n        setIsLoading(false)\n      })\n  }\n\n  const handleMarkAsComplete = () => {\n    setOpen(true)\n    setCourseTitle(selectedRow.course)\n    handleMenuClose()\n  }\n\n  return (\n    <>\n      <MaterialTable\n        title={`Current Schedule - ${currentTerm} ${currentYear} (${totalUnits} Units)`}\n        columns={columns}\n        data={tableData}\n        isLoading={isLoading}\n        options={{\n          actionsColumnIndex: -1,\n          emptyRowsWhenPaging: false,\n        }}\n        // TODO: refactor into menu\n        // https://github.com/Domino987/material-table-blog/blob/3671ee2250e626a6c0f3a68b47dd41d3850def2c/blog/src/GroupedActions/GroupedActions.tsx#L42\n        editable={{\n          onRowUpdate: async (newCourse, oldCourse) =>\n            new Promise((resolve, reject) => {\n              setIsLoading(true)\n              handleCourseUpdate(newCourse, oldCourse)\n              resolve()\n            }),\n        }}\n        actions={[\n          {\n            icon: MoreVertIcon,\n            tooltip: 'More',\n            onClick: handleMenuClick,\n          },\n        ]}\n      />\n      <Menu\n        id=\"more-menu\"\n        anchorEl={anchorEl}\n        keepMounted={true}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        {/* TODO */}\n        {/* <MenuItem onClick={handleCourseUpdate}>Edit</MenuItem> */}\n        <MenuItem onClick={handleCourseDelete}>Delete</MenuItem>\n        <MenuItem onClick={handleMarkAsComplete}>Mark As Complete</MenuItem>\n      </Menu>\n      {open && courseTitle ? (\n        <DialogSelect\n          open={open}\n          handleDialogClose={handleDialogClose}\n          handleDialogConfirm={handleDialogConfirm}\n          courseTitle={courseTitle}\n          grade={grade}\n          handleGradeChange={handleGradeChange}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default CurrentSchedule\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\n\nimport '../../../../utility/css/table-fixed-height.css'\nimport getGeRemaining from './getGeRemaining/getGeRemaining'\n\nconst GeRemaining = ({ geCourses, majorCourses, handleGeRemainingUnits }) => {\n  const {\n    geRemaining,\n    CAT_E,\n    CAT_F,\n    geEUnitCount,\n    geFUnitCount,\n  } = getGeRemaining(geCourses, majorCourses)\n\n  return (\n    <>\n      {geRemaining ? (\n        <div className=\"shadow-sm\">\n          <Card>\n            <Card.Body>\n              <Card.Title>Remaining GE Courses</Card.Title>\n            </Card.Body>\n          </Card>\n          <div className=\"table-wrapper\">\n            <Table striped hover bordered responsive=\"sm\">\n              <thead>\n                <tr>\n                  <th>COMMUNICATION & CRITICAL THINKING</th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation.startsWith('A')) {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.designation} - {course.course}\n                        </td>\n                        <td>{course.units}</td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>SCIENCE & MATH</th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation.startsWith('B')) {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.designation} - {course.course}\n                        </td>\n                        <td>{course.units}</td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>ARTS & HUMANITIES</th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation.startsWith('C')) {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.designation} - {course.course}\n                        </td>\n                        <td>{course.units}</td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>SOCIAL SCIENCES & CITIZENSHIP</th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation.startsWith('D')) {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.designation} - {course.course}\n                        </td>\n                        <td>{course.units}</td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>\n                    LIFELONG LEARNING & SELF DEVELOPMENT ({CAT_E - geEUnitCount}{' '}\n                    unit(s) left)\n                  </th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation.startsWith('E')) {\n                    return (\n                      <tr key={idx}>\n                        <td>{course.course}</td>\n                        <td>{course.units}</td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>CAPSTONE ({CAT_F - geFUnitCount} unit(s) left)</th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation.startsWith('F')) {\n                    return (\n                      <tr key={idx}>\n                        <td>{course.course}</td>\n                        <td>{course.units}</td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>ADDITIONAL REQUIREMENTS</th>\n                  <th>Units</th>\n                </tr>\n              </thead>\n              <tbody>\n                {geRemaining.map((course, idx) => {\n                  if (course.designation === 'Global Issues') {\n                    return (\n                      <tr key={idx}>\n                        <td>{course.course}</td>\n                        <td> </td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n                {geRemaining.map((course, idx) => {\n                  if (course.designation === 'Human Diversity') {\n                    return (\n                      <tr key={idx}>\n                        <td>{course.course}</td>\n                        <td> </td>\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      ) : (\n        <p>leading...</p>\n      )}\n    </>\n  )\n}\n\nexport default GeRemaining\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\n\nimport getMajorRemaining from './getMajorRemaining/getMajorRemaining'\nimport '../../../../utility/css/table-fixed-height.css'\n\nconst MajorRemaining = ({ majorCourses, handleMajorRemainingUnits }) => {\n  const {\n    majorRemaining,\n    lowerDivUnitCount,\n    approvedScienceUnitCount,\n    upperDivUnitCount,\n    writingIntensiveUnitCount,\n    coreElectiveUnitCount,\n    appliedElectiveUnitCount,\n    LOWER_DIV_UNITS,\n    APPROVED_SCIENCE_UNITS,\n    UPPER_DIV_UNITS,\n    WRITING_INTENSIVE_UNITS,\n    CORE_ELECTIVE_UNITS,\n    APPLIED_ELECTIVE_UNITS,\n  } = getMajorRemaining(majorCourses)\n\n  return (\n    <>\n      {majorRemaining ? (\n        <div className=\"shadow-sm\">\n          <Card>\n            <Card.Body>\n              <Card.Title>Remaining CECS Courses</Card.Title>\n            </Card.Body>\n          </Card>\n          <div className=\"table-wrapper\">\n            <Table striped hover bordered responsive=\"sm\">\n              <thead>\n                <tr>\n                  <th>\n                    Lower Division ({LOWER_DIV_UNITS - lowerDivUnitCount}{' '}\n                    unit(s) remaining)\n                  </th>\n                  {/* <th>Units</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Lower Div') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>\n                    Approved Science (\n                    {APPROVED_SCIENCE_UNITS - approvedScienceUnitCount} unit(s)\n                    remaining)\n                  </th>\n                  {/* <th>Units</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th colSpan=\"2\">\n                    <em>PHYSICAL SCIENCE</em>\n                  </th>\n                </tr>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Physical Science') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n                <tr>\n                  <th colSpan=\"2\">\n                    <em>LIFE SCIENCE</em>\n                  </th>\n                </tr>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Life Science') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>\n                    Upper Division ({UPPER_DIV_UNITS - upperDivUnitCount}{' '}\n                    unit(s) remaining)\n                  </th>\n                  {/* <th>Units</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Upper Div') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>\n                    Writing Intensive (\n                    {WRITING_INTENSIVE_UNITS - writingIntensiveUnitCount}{' '}\n                    unit(s) remaining)\n                  </th>\n                  {/* <th>Units</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Writing Intensive') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>\n                    Core Elective ({CORE_ELECTIVE_UNITS - coreElectiveUnitCount}{' '}\n                    unit(s) remaining)\n                  </th>\n                  {/* <th>Units</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Core Elective') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n              <thead>\n                <tr>\n                  <th>\n                    Applied Elective (\n                    {APPLIED_ELECTIVE_UNITS - appliedElectiveUnitCount} unit(s)\n                    remaining)\n                  </th>\n                  {/* <th>Units</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {majorRemaining.map((course, idx) => {\n                  if (course.designation === 'Applied Elective') {\n                    return (\n                      <tr key={idx}>\n                        <td>\n                          {course.course} - {course.title}\n                        </td>\n                        {/* <td>{course.units}</td> */}\n                      </tr>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      ) : (\n        <p>loading...</p>\n      )}\n    </>\n  )\n}\n\nexport default MajorRemaining\n","import React, { useContext } from 'react'\nimport Col from 'react-bootstrap/Col'\n\nimport GeRemaining from '../RemainingCourses/GeRemaining/GeRemaining'\nimport { myContext } from '../../../context/Context'\nimport MajorRemaining from './MajorRemaining/MajorRemaining'\n\nconst RemainingCourses = ({ type }) => {\n  const {\n    geCourses,\n    majorCourses,\n    handleMajorRemainingUnits,\n    handleGeRemainingUnits,\n  } = useContext(myContext)\n\n  return (\n    <>\n      {geCourses && majorCourses ? (\n        <Col>\n          {type === 'ge' ? (\n            <GeRemaining\n              geCourses={geCourses}\n              majorCourses={majorCourses}\n              handleGeRemainingUnits={handleGeRemainingUnits}\n            />\n          ) : (\n            <MajorRemaining\n              majorCourses={majorCourses}\n              handleMajorRemainingUnits={handleMajorRemainingUnits}\n            />\n          )}\n        </Col>\n      ) : (\n        <p>loading...</p>\n      )}\n    </>\n  )\n}\n\nexport default RemainingCourses\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\n\nimport { majorReqData } from './CecsReqData'\n\nimport '../../../../utility/css/table-fixed-height.css'\n\nconst MajorRequirements = () => {\n  return (\n    <>\n      <div className=\"shadow-sm\">\n        <Card>\n          <Card.Body>\n            <Card.Title>CECS Requirements (2020-2021)</Card.Title>\n          </Card.Body>\n        </Card>\n        <div className=\"table-wrapper\">\n          <Table maxheight=\"100px\" striped hover bordered responsive=\"sm\">\n            <thead>\n              <tr>\n                <th>Lower Division (Take all of the following)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Lower Div') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>Approved Science (1 Physical, 1 Life; 8 Units Req.)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th colSpan=\"2\">\n                  <em>PHYSICAL SCIENCE</em>\n                </th>\n              </tr>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Physical Science') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n              <tr>\n                <th colSpan=\"2\">\n                  <em>LIFE SCIENCE</em>\n                </th>\n              </tr>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Life Science') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>Upper Division (Take all of the following)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Upper Div') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>Writing Intensive (3 Units Req.)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Writing Intensive') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>Core Elective (6 Units Req.)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Core Elective') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>Applied Elective (3 Units Req.)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {majorReqData.map((course, idx) => {\n                if (course.designation === 'Applied Elective') {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.course} - {course.title}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default MajorRequirements\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\n\nimport { geReqData } from './GeReqData'\n\nimport '../../../../utility/css/table-fixed-height.css'\n\nconst GeRequirements = () => {\n  return (\n    <>\n      <div className=\"shadow-sm\">\n        <Card>\n          <Card.Body>\n            <Card.Title>GE Requirements</Card.Title>\n          </Card.Body>\n        </Card>\n        <div className=\"table-wrapper\">\n          <Table striped hover bordered responsive=\"sm\">\n            <thead>\n              <tr>\n                <th>COMMUNICATION & CRITICAL THINKING</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation.startsWith('A')) {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.designation} - {course.course}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>SCIENCE & MATH</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation.startsWith('B')) {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.designation} - {course.course}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>ARTS & HUMANITIES</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation.startsWith('C')) {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.designation} - {course.course}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>SOCIAL SCIENCES & CITIZENSHIP</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation.startsWith('D')) {\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        {course.designation} - {course.course}\n                      </td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>LIFELONG LEARNING & SELF DEVELOPMENT (3 units req.)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation.startsWith('E')) {\n                  return (\n                    <tr key={idx}>\n                      <td>{course.designation}</td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>CAPSTONE (9 units req.)</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation.startsWith('F')) {\n                  return (\n                    <tr key={idx}>\n                      <td>{course.designation}</td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n            <thead>\n              <tr>\n                <th>ADDITIONAL REQUIREMENTS</th>\n                {/* <th>Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {geReqData.map((course, idx) => {\n                if (course.designation === 'Global Issues') {\n                  return (\n                    <tr key={idx}>\n                      <td>{course.course}</td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n              {geReqData.map((course, idx) => {\n                if (course.designation === 'Human Diversity') {\n                  return (\n                    <tr key={idx}>\n                      <td>{course.course}</td>\n                      {/* <td>{course.units}</td> */}\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default GeRequirements\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\n\nimport MajorRequirements from '../Requirements/MajorRequirements/MajorRequirements'\nimport GeRequirements from '../Requirements/GeRequirements/GeRequirements'\n\nconst Requirements = ({ type }) => {\n  return <Col>{type === 'ge' ? <GeRequirements /> : <MajorRequirements />}</Col>\n}\n\nexport default Requirements\n","import React, { useState } from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\nimport StudentInfo from '../../components/StudentInfo/StudentInfo'\nimport CurrentSchedule from '../../components/Tables/CurrentSchedule/CurrentSchedule'\nimport RemainingCourses from '../../components/Tables/RemainingCourses/RemainingCourses'\nimport Requirements from '../../components/Tables/Requirements/Requirements'\n\nconst Dashboard = () => {\n  const [type, setType] = useState('ge')\n\n  const handleCourseChange = (value) => {\n    setType(value)\n  }\n\n  return (\n    <>\n      <Row className=\"mt-5\">\n        <Col>\n          <StudentInfo />\n        </Col>\n      </Row>\n\n      <Row className=\"mt-4\">\n        <Col>\n          <CurrentSchedule />\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col className=\"d-flex justify-content-center\">\n          <ToggleButtonGroup\n            className=\"mb-3\"\n            type=\"radio\"\n            name=\"options\"\n            defaultValue=\"ge\"\n            onChange={handleCourseChange}\n          >\n            <ToggleButton value=\"ge\">GE</ToggleButton>\n            <ToggleButton value=\"major\">Major</ToggleButton>\n          </ToggleButtonGroup>\n        </Col>\n      </Row>\n      <Row className=\"mt-3 mb-5\">\n        <Col>\n          <RemainingCourses type={type} />\n        </Col>\n        <Col>\n          <Requirements type={type} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\nimport MaterialTable from 'material-table'\nimport { useConfirm } from 'material-ui-confirm'\n\nimport { myContext } from '../../../../context/Context'\nimport '../../../../utility/css/table-fixed-height.css'\n\nconst MajorHistory = () => {\n  const {\n    user,\n    completedCourses,\n    getCompletedCourses,\n    updateCompletedCourse,\n    deleteCompletedCourse,\n  } = useContext(myContext)\n\n  const [isLoading, setIsLoading] = useState(true)\n  const userID = JSON.parse(user).googleId\n  const confirm = useConfirm()\n\n  useEffect(() => {\n    getCompletedCourses(userID)\n  }, [getCompletedCourses, userID, setIsLoading])\n\n  const columns = [\n    {\n      title: 'Course',\n      field: 'course',\n      cellStyle: {\n        whiteSpace: 'nowrap',\n      },\n    },\n    {\n      title: 'Grade',\n      field: 'grade',\n      lookup: {\n        A: 'A',\n        B: 'B',\n        C: 'C',\n        D: 'D',\n        F: 'F',\n        W: 'W',\n        CR: 'CR',\n        NC: 'NC',\n      },\n      width: 1000,\n    },\n    {\n      title: 'Units',\n      field: 'units',\n      lookup: {\n        0: 0,\n        1: 1,\n        2: 2,\n        3: 3,\n        4: 4,\n        5: 5,\n      },\n    },\n    {\n      title: 'Designation',\n      field: 'designation',\n      lookup: {\n        'Lower Div': 'Lower Div',\n        'Physical Science': 'Physical Science',\n        'Life Science': 'Life Science',\n        'Upper Div': 'Upper Div',\n        'Writing Intensive': 'Writing Intensive',\n        'Core Elective': 'Core Elective',\n        'Applied Elective': 'Applied Elective',\n      },\n    },\n    {\n      title: 'Term',\n      field: 'termYear',\n      width: 500,\n    },\n  ]\n\n  const courses = useMemo(\n    () =>\n      completedCourses\n        .filter((course) => {\n          return course.type === 'major' && course.designation !== ''\n        })\n        .map((course) => {\n          return {\n            userID: userID,\n            type: course.type,\n            course: course.dept + ' ' + course.number + ' - ' + course.title,\n            grade: course.grade,\n            units: course.units,\n            designation: course.designation,\n            additionalReq: course.additionalReq,\n            termYear: course.term + ' ' + course.year.toString(),\n          }\n        }),\n\n    [completedCourses, userID]\n  )\n\n  const [tableData, setTableData] = useState(courses)\n\n  useEffect(() => {\n    setTableData(courses)\n    setIsLoading(false)\n  }, [completedCourses, courses])\n\n  const handleCourseUpdate = (newCourse, oldCourse) => {\n    try {\n      // change server side\n      updateCompletedCourse({ newCourse, oldCourse })\n\n      // change client side\n      const dataUpdate = [...tableData]\n      const index = oldCourse.tableData.id\n      dataUpdate[index] = newCourse\n      setTableData([...dataUpdate])\n      setIsLoading(false)\n    } catch (error) {\n      // TODO: change to alert\n      console.log(error)\n    }\n  }\n\n  const handleCourseDelete = (data) => {\n    confirm({ description: 'Delete selected courses' })\n      .then(() => {\n        // change server side\n        deleteCompletedCourse(data)\n        // change client side\n        const valuesToRemove = []\n        let dataDelete = [...tableData]\n        for (const oldData of data) {\n          valuesToRemove.push(oldData)\n        }\n        dataDelete = dataDelete.filter((i) => valuesToRemove.indexOf(i) === -1)\n        setTableData([...dataDelete])\n        setIsLoading(false)\n      })\n      .catch(() => {\n        console.log('cancelled')\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <MaterialTable\n      title={'CECS Major History'}\n      columns={columns}\n      data={tableData}\n      isLoading={isLoading}\n      options={{\n        selection: true,\n        actionsColumnIndex: -1,\n        emptyRowsWhenPaging: false,\n      }}\n      editable={{\n        onRowUpdate: async (newCourse, oldCourse) =>\n          new Promise((resolve, reject) => {\n            setIsLoading(true)\n            handleCourseUpdate(newCourse, oldCourse)\n            resolve()\n          }),\n      }}\n      localization={{\n        header: {\n          actions: 'Edit',\n        },\n      }}\n      actions={[\n        {\n          tooltip: 'Delete',\n          icon: 'delete',\n          onClick: (evt, data) => {\n            handleCourseDelete(data)\n          },\n        },\n      ]}\n    />\n  )\n}\n\nexport default MajorHistory\n","import React, { useState, useEffect, useContext, useMemo } from 'react'\nimport MaterialTable from 'material-table'\nimport { useConfirm } from 'material-ui-confirm'\n\nimport { myContext } from '../../../../context/Context.js'\n\nimport '../../../../utility/css/table-fixed-height.css'\n\nconst GeHistory = () => {\n  const {\n    user,\n    completedCourses,\n    getCompletedCourses,\n    updateCompletedCourse,\n    deleteCompletedCourse,\n  } = useContext(myContext)\n\n  const [isLoading, setIsLoading] = useState(true)\n  const userID = JSON.parse(user).googleId\n  const confirm = useConfirm()\n\n  useEffect(() => {\n    // set state of currentCourses inside context via reducer\n    getCompletedCourses(userID)\n  }, [getCompletedCourses, userID, setIsLoading])\n\n  const columns = [\n    {\n      title: 'Course',\n      field: 'course',\n      cellStyle: {\n        whiteSpace: 'nowrap',\n      },\n    },\n    {\n      title: 'Grade',\n      field: 'grade',\n      lookup: {\n        A: 'A',\n        B: 'B',\n        C: 'C',\n        D: 'D',\n        F: 'F',\n        W: 'W',\n        CR: 'CR',\n        NC: 'NC',\n      },\n      width: 1000,\n    },\n    {\n      title: 'Units',\n      field: 'units',\n      lookup: {\n        0: 0,\n        1: 1,\n        2: 2,\n        3: 3,\n        4: 4,\n        5: 5,\n      },\n    },\n    {\n      title: 'Designation',\n      field: 'designation',\n      lookup: {\n        A1: 'A1',\n        A2: 'A2',\n        A3: 'A3',\n        B1: 'B1',\n        B2: 'B2',\n        B3: 'B3',\n        B4: 'B4',\n        C1: 'C1',\n        C2: 'C2',\n        C3: 'C3',\n        D1: 'D1',\n        D2: 'D2',\n        D3: 'D3',\n        E: 'E',\n        F: 'F',\n      },\n    },\n    {\n      title: 'Additional Req',\n      field: 'additionalReq',\n      lookup: {\n        'N/A': 'N/A',\n        'Global Issues': 'Global Issues',\n        'Human Diversity': 'Human Diversity',\n      },\n    },\n    {\n      title: 'Term',\n      field: 'termYear',\n      width: 500,\n    },\n  ]\n\n  const courses = useMemo(\n    () =>\n      completedCourses\n        .filter((course) => {\n          return course.type === 'ge' && course.designation !== ''\n        })\n        .map((course) => {\n          return {\n            userID: userID,\n            type: course.type,\n            course: course.dept + ' ' + course.number + ' - ' + course.title,\n            grade: course.grade,\n            units: course.units,\n            designation: course.designation,\n            additionalReq: course.additionalReq,\n            termYear: course.term + ' ' + course.year.toString(),\n          }\n        }),\n\n    [completedCourses, userID]\n  )\n\n  const [tableData, setTableData] = useState(courses)\n\n  useEffect(() => {\n    setTableData(courses)\n    setIsLoading(false)\n  }, [completedCourses, courses])\n\n  const handleCourseUpdate = (newCourse, oldCourse) => {\n    try {\n      // change server side\n      updateCompletedCourse({ newCourse, oldCourse })\n\n      // change client side\n      const dataUpdate = [...tableData]\n      const index = oldCourse.tableData.id\n      dataUpdate[index] = newCourse\n      setTableData([...dataUpdate])\n      setIsLoading(false)\n    } catch (error) {\n      // TODO: change to alert\n      console.log(error)\n    }\n  }\n  const handleCourseDelete = (data) => {\n    confirm({ description: 'Delete selected courses' })\n      .then(() => {\n        // change server side\n        deleteCompletedCourse(data)\n        // change client side\n        const valuesToRemove = []\n        let dataDelete = [...tableData]\n        for (const oldData of data) {\n          valuesToRemove.push(oldData)\n        }\n        dataDelete = dataDelete.filter((i) => valuesToRemove.indexOf(i) === -1)\n        setTableData([...dataDelete])\n        setIsLoading(false)\n      })\n      .catch(() => {\n        console.log('cancelled')\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <MaterialTable\n      title={'GE History'}\n      columns={columns}\n      data={tableData}\n      isLoading={isLoading}\n      options={{\n        selection: true,\n        actionsColumnIndex: -1,\n        emptyRowsWhenPaging: false,\n      }}\n      editable={{\n        onRowUpdate: async (newCourse, oldCourse) =>\n          new Promise((resolve, reject) => {\n            setIsLoading(true)\n            handleCourseUpdate(newCourse, oldCourse)\n            resolve()\n          }),\n      }}\n      localization={{\n        header: {\n          actions: 'Edit',\n        },\n      }}\n      actions={[\n        {\n          tooltip: 'Delete',\n          icon: 'delete',\n          onClick: (evt, data) => {\n            handleCourseDelete(data)\n          },\n        },\n      ]}\n    />\n  )\n}\n\nexport default GeHistory\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\nimport MaterialTable from 'material-table'\nimport { useConfirm } from 'material-ui-confirm'\n\nimport { myContext } from '../../../../context/Context'\nimport '../../../../utility/css/table-fixed-height.css'\n\nconst OtherHistory = () => {\n  const {\n    user,\n    completedCourses,\n    getCompletedCourses,\n    updateCompletedCourse,\n    deleteCompletedCourse,\n  } = useContext(myContext)\n\n  const [isLoading, setIsLoading] = useState(true)\n  const userID = JSON.parse(user).googleId\n  const confirm = useConfirm()\n\n  useEffect(() => {\n    // set state of currentCourses inside context via reducer\n    getCompletedCourses(userID)\n  }, [getCompletedCourses, userID, setIsLoading])\n\n  const columns = [\n    {\n      title: 'Course',\n      field: 'course',\n      cellStyle: {\n        whiteSpace: 'nowrap',\n      },\n    },\n    {\n      title: 'Grade',\n      field: 'grade',\n      lookup: {\n        A: 'A',\n        B: 'B',\n        C: 'C',\n        D: 'D',\n        F: 'F',\n        W: 'W',\n        CR: 'CR',\n        NC: 'NC',\n      },\n      width: 1000,\n    },\n    {\n      title: 'Units',\n      field: 'units',\n      lookup: {\n        0: 0,\n        1: 1,\n        2: 2,\n        3: 3,\n        4: 4,\n        5: 5,\n      },\n    },\n    {\n      title: 'Designation',\n      field: 'designation',\n      lookup: {\n        A1: 'A1',\n        A2: 'A2',\n        A3: 'A3',\n        B1: 'B1',\n        B2: 'B2',\n        B3: 'B3',\n        B4: 'B4',\n        C1: 'C1',\n        C2: 'C2',\n        C3: 'C3',\n        D1: 'D1',\n        D2: 'D2',\n        D3: 'D3',\n        E: 'E',\n        F: 'F',\n        'Lower Div': 'Lower Div',\n        'Physical Science': 'Physical Science',\n        'Life Science': 'Life Science',\n        'Upper Div': 'Upper Div',\n        'Writing Intensive': 'Writing Intensive',\n        'Core Elective': 'Core Elective',\n        'Applied Elective': 'Applied Elective',\n      },\n      // cellStyle: {\n      //   whiteSpace: 'nowrap',\n      // },\n      // width: 1000,\n    },\n    {\n      title: 'Additional Req',\n      field: 'additionalReq',\n      lookup: {\n        'N/A': 'N/A',\n        'Global Issues': 'Global Issues',\n        'Human Diversity': 'Human Diversity',\n      },\n    },\n    {\n      title: 'Term',\n      field: 'termYear',\n      // cellStyle: {\n      //   whiteSpace: 'nowrap', // history.push('dashboard');\n      // },\n      width: 500,\n    },\n  ]\n\n  const courses = useMemo(\n    () =>\n      completedCourses\n        .filter((course) => {\n          return course.designation === ''\n        })\n        .map((course) => {\n          return {\n            userID: userID,\n            type: course.type,\n            course: course.dept + ' ' + course.number + ' - ' + course.title,\n            grade: course.grade,\n            units: course.units,\n            designation: course.designation,\n            additionalReq: course.additionalReq,\n            termYear: course.term + ' ' + course.year.toString(),\n          }\n        }),\n\n    [completedCourses, userID]\n  )\n\n  const [tableData, setTableData] = useState(courses)\n\n  useEffect(() => {\n    setTableData(courses)\n    setIsLoading(false)\n  }, [completedCourses, courses])\n\n  const handleCourseUpdate = (newCourse, oldCourse) => {\n    try {\n      // change server side\n      updateCompletedCourse({ newCourse, oldCourse })\n\n      // change client side\n      const dataUpdate = [...tableData]\n      const index = oldCourse.tableData.id\n      dataUpdate[index] = newCourse\n      setTableData([...dataUpdate])\n      setIsLoading(false)\n    } catch (error) {\n      // TODO: change to alert\n      console.log(error)\n    }\n  }\n\n  const handleCourseDelete = (data) => {\n    confirm({ description: 'Delete selected courses' })\n      .then(() => {\n        // change server side\n        deleteCompletedCourse(data)\n        // change client side\n        const valuesToRemove = []\n        let dataDelete = [...tableData]\n        for (const oldData of data) {\n          valuesToRemove.push(oldData)\n        }\n        dataDelete = dataDelete.filter((i) => valuesToRemove.indexOf(i) === -1)\n        setTableData([...dataDelete])\n        setIsLoading(false)\n      })\n      .catch(() => {\n        console.log('cancelled')\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <MaterialTable\n      title={'Other History'}\n      columns={columns}\n      data={tableData}\n      isLoading={isLoading}\n      options={{\n        selection: true,\n        actionsColumnIndex: -1,\n        emptyRowsWhenPaging: false,\n      }}\n      editable={{\n        onRowUpdate: async (newCourse, oldCourse) =>\n          new Promise((resolve, reject) => {\n            setIsLoading(true)\n            handleCourseUpdate(newCourse, oldCourse)\n            resolve()\n          }),\n      }}\n      localization={{\n        header: {\n          actions: 'Edit',\n        },\n      }}\n      actions={[\n        {\n          tooltip: 'Delete',\n          icon: 'delete',\n          onClick: (evt, data) => {\n            handleCourseDelete(data)\n          },\n        },\n      ]}\n    />\n  )\n}\n\nexport default OtherHistory\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nimport MajorHistory from '../../components/Tables/History/MajorHistory/MajorHistory'\nimport GeHistory from '../../components/Tables/History/GeHistory/GeHistory'\nimport OtherHistory from '../../components/Tables/History/OtherHistory/OtherHistory'\n\nimport '../../utility/css/table-fixed-height.css'\n\nconst CourseHistory = () => {\n  const history = useHistory()\n\n  const handleAddCompletedCourse = () => {\n    history.push('add-completed-course')\n  }\n\n  return (\n    <>\n      <Card className=\"mt-5 text-center shadow-sm\">\n        <Row>\n          <Col>\n            <Card.Body>\n              <Card.Title>Course History</Card.Title>\n              <Button onClick={handleAddCompletedCourse} size=\"sm\">\n                Add Completed Course\n              </Button>\n            </Card.Body>\n          </Col>\n        </Row>\n      </Card>\n\n      {/* TODO: make one table component and pass each data as props */}\n      <div className=\"shadow-sm mb-5\">\n        <MajorHistory />\n      </div>\n      <div className=\"shadow-sm mb-5\">\n        <GeHistory />\n      </div>\n      <div className=\"shadow-sm mb-5\">\n        <OtherHistory />\n      </div>\n    </>\n  )\n}\n\nexport default CourseHistory\n","import { useState } from 'react'\n\nconst useTrait = (initialValue) => {\n  const [trait, updateTrait] = useState(initialValue)\n\n  let current = trait\n\n  const get = () => current\n\n  const set = (newValue) => {\n    current = newValue\n    updateTrait(newValue)\n    return current\n  }\n\n  return {\n    get,\n    set,\n  }\n}\n\nexport default useTrait\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { green } from '@material-ui/core/colors'\nimport Fab from '@material-ui/core/Fab'\nimport CheckIcon from '@material-ui/icons/Check'\nimport SaveIcon from '@material-ui/icons/Save'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -5.8,\n    left: 169,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}))\n\nconst CircularIntegration = ({\n  isLoading,\n  success,\n  handleButtonClick,\n  isTranscriptSubmit,\n}) => {\n  const classes = useStyles()\n\n  const buttonClassname = clsx({\n    // [classes.buttonSuccess]: success,\n    [classes.buttonSuccess]: isTranscriptSubmit ? success : '',\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Fab\n          aria-label=\"save\"\n          color=\"primary\"\n          className={buttonClassname}\n          onClick={handleButtonClick}\n        >\n          {success && isTranscriptSubmit ? <CheckIcon /> : <SaveIcon />}\n        </Fab>\n        {isLoading && (\n          <CircularProgress size={68} className={classes.fabProgress} />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default CircularIntegration\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nimport './DragAndDrop.css'\n/**\n * Drag and drop a file\n * @author Ryan Stehle\n */\nexport default function Accept({ handleFileChange }) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      handleFileChange(acceptedFiles)\n    },\n    [handleFileChange]\n  )\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: '',\n    onDrop,\n  })\n\n  const acceptedFilesItems = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ))\n\n  const dragStatus = isDragAccept ? 'accept' : isDragReject ? 'reject' : ''\n\n  return (\n    <section className=\"container\">\n      <div\n        className=\"dropzone\"\n        {...getRootProps({ className: `dropzone ${dragStatus}` })}\n      >\n        <input {...getInputProps()} />\n        <span>{isDragActive ? '📂' : '📁'}</span>\n        <p className=\"dragText\">\n          Drag and drop your transcipt here, or click to select file.\n        </p>\n      </div>\n      <aside>\n        <h4>Accepted file</h4>\n        <ul>{acceptedFilesItems}</ul>\n      </aside>\n    </section>\n  )\n}\n","import Snackbar from '@material-ui/core/Snackbar'\n// import { makeStyles } from '@material-ui/core/styles'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport React from 'react'\n\nconst Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     backgroundColor: '#2a9d8f',\n//   },\n// }))\n\nconst MySnackbar = ({ open, severity, error, success, handleClose }) => {\n  // const classes = useStyles()\n\n  return (\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert\n        // className={classes.root}\n        onClose={handleClose}\n        severity={severity}\n      >\n        {success ? 'Successfully Added!' : error}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default MySnackbar\n","import React, { useContext, useState } from 'react'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport Button from 'react-bootstrap/Button'\n\nimport useTrait from '../../../hooks/useTrait'\nimport CircularIntegration from './CircularIntegration/CircularIntegration'\nimport DragAndDrop from '../../../utility/DrapAndDrop/DragAndDrop'\nimport { geReqData } from '../../Tables/Requirements/GeRequirements/GeReqData'\nimport { majorReqCategory } from '../../Tables/Requirements/MajorRequirements/CecsReqData'\nimport { myContext } from '../../../context/Context'\nimport * as api from '../../../api'\nimport MySnackbar from '../../../utility/MySnackbar/MySnackbar'\n\nexport const CompletedCourseForm = (props) => {\n  const {\n    addCompletedCourse,\n    user,\n    updateUserAfterTranscriptUpload,\n  } = useContext(myContext)\n\n  // -------------------------------------------------------------------\n  // TODO: possibly move to context or AddCourse component after refactoring\n  const [open, setOpen] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [severity, setSeverity] = useState(null)\n  const [error, setError] = useState(null)\n  // -------------------------------------------------------------------\n\n  const [isTranscriptSubmit, setIsTranscriptSubmit] = useState(false)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const courseType = useTrait('ge')\n\n  const formik = useFormik({\n    initialValues: {\n      courseNumber: '',\n      courseDept: '',\n      courseTitle: '',\n      courseUnits: '',\n      courseTerm: '',\n      courseYear: '',\n      courseDesignation: '',\n      courseAdditionalReq: '',\n      courseGrade: '',\n    },\n    validationSchema: Yup.object({\n      courseNumber: Yup.string()\n        .required('This field is required')\n        .typeError('You must specify a number'),\n      courseDept: Yup.string().required('This field is required'),\n      courseTitle: Yup.string().required('This field is required'),\n      courseUnits: Yup.string().required('This field is required'),\n      courseTerm: Yup.string().required('This field is required'),\n      courseYear: Yup.number()\n        .required('This field is required')\n        .typeError('You must specify a number'),\n      courseGrade: Yup.string().required('This field is required'),\n    }),\n    onSubmit: (values) => {\n      handleSubmit(values)\n    },\n  })\n\n  const handleCourseTypeChange = (val) => {\n    courseType.set(val)\n  }\n\n  const handleSubmit = async ({\n    courseNumber,\n    courseDept,\n    courseTitle,\n    courseUnits,\n    courseTerm,\n    courseYear,\n    courseGrade,\n    courseDesignation,\n    courseAdditionalReq,\n  }) => {\n    if (courseType.get() === 'ge') {\n      if (courseDesignation === '') {\n        courseDesignation = 'A1 - Oral Communication'\n      }\n    } else {\n      if (courseDesignation === '') {\n        courseDesignation = 'Lower Div'\n      }\n    }\n\n    if (courseAdditionalReq === '') {\n      courseAdditionalReq = 'N/A'\n    }\n\n    const courseData = {\n      userID: JSON.parse(user).googleId,\n      type: courseType.get(),\n      number: courseNumber,\n      dept: courseDept,\n      title: courseTitle,\n      units: courseUnits,\n      term: courseTerm,\n      year: courseYear,\n      grade: courseGrade,\n      designation: courseDesignation.split(' -')[0],\n      additionalReq: courseAdditionalReq,\n    }\n\n    setSuccess(false)\n    setIsTranscriptSubmit(false)\n\n    try {\n      const res = await addCompletedCourse(courseData)\n      if (res.data.success === true) {\n        setSuccess(true)\n        setSeverity('success')\n        setOpen(true)\n        setIsLoading(false)\n      }\n    } catch (error) {\n      setSeverity('error')\n      setOpen(true)\n      setError(error.message)\n    }\n  }\n\n  const handleFileChange = (file) => {\n    setSelectedFile(file[0])\n  }\n\n  const checkMimeType = (event) => {\n    const file = selectedFile\n    const type = 'application/pdf'\n    if (file.type !== type) {\n      throw new Error(`${file.type} is not a supported format`)\n    }\n\n    return true\n  }\n\n  // -----------------------------------------------------\n  // TODO: possibly move to context\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n  // -----------------------------------------------------\n\n  const handleUploadClick = async (e) => {\n    e.preventDefault()\n    setSuccess(false)\n    setIsTranscriptSubmit(true)\n\n    try {\n      checkMimeType(e)\n\n      if (!isLoading) {\n        setIsLoading(true)\n\n        const formData = new FormData()\n\n        formData.append('file', selectedFile)\n        formData.append('userID', JSON.parse(user).googleId)\n\n        // api not in context\n        const res = await api.uploadTranscript(formData)\n\n        if (res.data.success === true) {\n          setSuccess(true)\n          setSeverity('success')\n          setOpen(true)\n          setIsLoading(false)\n          setSelectedFile(null)\n\n          updateUserAfterTranscriptUpload()\n        }\n      }\n    } catch (error) {\n      setSeverity('error')\n      setOpen(true)\n      setError(error.message)\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <Row className=\"d-flex mt-5 justify-content-center\">\n          <Col md={9}>\n            <Card className=\"text-center shadow-sm mb-3\">\n              <Card.Body>\n                <Row className=\"my-2\">\n                  <Col className=\"d-flex justify-content-center\">\n                    <Form onSubmit={formik.handleSubmit}>\n                      {/* COURSE TYPE */}\n                      <ToggleButtonGroup\n                        className=\"mb-3\"\n                        type=\"radio\"\n                        name=\"options\"\n                        defaultValue=\"ge\"\n                        onChange={handleCourseTypeChange}\n                      >\n                        <ToggleButton value=\"ge\">GE Course</ToggleButton>\n                        <ToggleButton value=\"major\">Major Course</ToggleButton>\n                      </ToggleButtonGroup>\n\n                      {/* COURSE NUMBER */}\n                      <Form.Group controlId=\"courseNumber\">\n                        <Form.Label>Course Number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"courseNumber\"\n                          {...formik.getFieldProps('courseNumber')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseNumber &&\n                      formik.errors.courseNumber ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseNumber}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE DEPT */}\n                      <Form.Group controlId=\"courseDept\">\n                        <Form.Label>Course Department</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"courseDept\"\n                          {...formik.getFieldProps('courseDept')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseDept && formik.errors.courseDept ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseDept}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE TITLE */}\n                      <Form.Group controlId=\"courseTitle\">\n                        <Form.Label>Course Title</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"courseTitle\"\n                          {...formik.getFieldProps('courseTitle')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseTitle &&\n                      formik.errors.courseTitle ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseTitle}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE UNITS */}\n                      <Form.Group controlId=\"courseUnits\">\n                        <Form.Label>Units</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"courseUnits\"\n                          {...formik.getFieldProps('courseUnits')}\n                        >\n                          <option value=\"\"></option>\n                          <option value=\"1\">1</option>\n                          <option value=\"2\">2</option>\n                          <option value=\"3\">3</option>\n                          <option value=\"4\">4</option>\n                          <option value=\"5\">5</option>\n                        </Form.Control>\n                      </Form.Group>\n                      {formik.touched.courseUnits &&\n                      formik.errors.courseUnits ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseUnits}\n                        </div>\n                      ) : null}\n\n                      <Row>\n                        <Col>\n                          {/* COURSE TERM */}\n                          <Form.Group controlId=\"courseTerm\">\n                            <Form.Label>Term</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              name=\"courseTerm\"\n                              {...formik.getFieldProps('courseTerm')}\n                            >\n                              <option value=\"\"></option>\n                              <option value=\"Fall\">Fall</option>\n                              <option value=\"Spring\">Spring</option>\n                              <option value=\"Summer\">Summer</option>\n                              <option value=\"Winter\">Winter</option>\n                            </Form.Control>\n                          </Form.Group>\n                          {formik.touched.courseTerm &&\n                          formik.errors.courseTerm ? (\n                            <div style={{ color: 'red' }}>\n                              {formik.errors.courseTerm}\n                            </div>\n                          ) : null}\n                        </Col>\n                        <Col>\n                          {/* COURSE YEAR */}\n                          <Form.Group controlId=\"courseYear\">\n                            <Form.Label>Year</Form.Label>\n                            <Form.Control\n                              type=\"input\"\n                              name=\"courseYear\"\n                              {...formik.getFieldProps('courseYear')}\n                            />\n                          </Form.Group>\n                          {formik.touched.courseYear &&\n                          formik.errors.courseYear ? (\n                            <div style={{ color: 'red' }}>\n                              {formik.errors.courseYear}\n                            </div>\n                          ) : null}\n                        </Col>\n                      </Row>\n\n                      {/* COURSE DESIGNATION */}\n                      {courseType.get() === 'ge' ? (\n                        // ge designation\n                        <>\n                          <Form.Group controlId=\"designation\">\n                            <Form.Label>Designation</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              name=\"designation\"\n                              {...formik.getFieldProps('courseDesignation')}\n                            >\n                              {geReqData.slice(0, 13).map((ge, idx) => {\n                                return (\n                                  <option\n                                    value={`${ge.designation} - ${ge.course}`}\n                                    key={idx}\n                                  >\n                                    {ge.designation} - {ge.course}\n                                  </option>\n                                )\n                              })}\n                            </Form.Control>\n                          </Form.Group>\n\n                          {/* Additional Req */}\n                          <Form.Group controlId=\"additinalReq\">\n                            <Form.Label>Additional Requirements</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              name=\"additionalReq\"\n                              {...formik.getFieldProps('courseAdditionalReq')}\n                            >\n                              <option value=\"-\" key={1}>\n                                -\n                              </option>\n                              <option value=\"Human Diversity\" key={2}>\n                                Human Diversity\n                              </option>\n                              <option value=\"Global Issues\" key={3}>\n                                Global Issues\n                              </option>\n                            </Form.Control>\n                          </Form.Group>\n                        </>\n                      ) : (\n                        // major designation\n                        <Form.Group controlId=\"designation\">\n                          <Form.Label>Designation</Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            name=\"designation\"\n                            {...formik.getFieldProps('courseDesignation')}\n                          >\n                            {majorReqCategory.map((category, idx) => {\n                              return (\n                                <option value={category} key={idx}>\n                                  {category}\n                                </option>\n                              )\n                            })}\n                          </Form.Control>\n                        </Form.Group>\n                      )}\n\n                      {/* COURSE GRADE */}\n                      <Form.Group controlId=\"courseGrade\">\n                        <Form.Label>Grade</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"courseGrade\"\n                          {...formik.getFieldProps('courseGrade')}\n                        >\n                          <option value=\"\"></option>\n                          <option value=\"A\">A</option>\n                          <option value=\"B\">B</option>\n                          <option value=\"C\">C</option>\n                          <option value=\"D\">D</option>\n                          <option value=\"F\">F</option>\n                          <option value=\"CR\">CR</option>\n                          <option value=\"NC\">NC</option>\n                        </Form.Control>\n                      </Form.Group>\n                      {formik.touched.courseGrade &&\n                      formik.errors.courseGrade ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseGrade}\n                        </div>\n                      ) : null}\n\n                      {/* SUBMIT */}\n                      <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\n                        Submit\n                      </Button>\n\n                      <Row className=\"mt-3 d-flex justify-content-center\">\n                        <Col md={9} className=\"d-flex justify-content-center\">\n                          <p> - or - </p>\n                        </Col>\n                      </Row>\n\n                      {/* TRANSCRIPT SUBMIT */}\n                      <Form.Group>\n                        <DragAndDrop handleFileChange={handleFileChange} />\n                      </Form.Group>\n                      <CircularIntegration\n                        handleButtonClick={handleUploadClick}\n                        isLoading={isLoading}\n                        success={success}\n                        isTranscriptSubmit={isTranscriptSubmit}\n                      />\n                    </Form>\n\n                    {/* ALERT */}\n                    <MySnackbar\n                      open={open}\n                      severity={severity}\n                      error={error}\n                      success={success}\n                      handleClose={handleClose}\n                    />\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default CompletedCourseForm\n","import React, { useState, useContext } from 'react'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/esm/Col'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport TimePicker from 'react-bootstrap-time-picker'\nimport Container from 'react-bootstrap/esm/Container'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport useTrait from '../../../hooks/useTrait'\nimport { myContext } from '../../../context/Context'\nimport { geReqData } from '../../Tables/Requirements/GeRequirements/GeReqData'\nimport { majorReqCategory } from '../../Tables/Requirements/MajorRequirements/CecsReqData'\nimport MySnackbar from '../../../utility/MySnackbar/MySnackbar'\n\nexport const CurrentCourseForm = (props) => {\n  const { addCurrentCourse, user } = useContext(myContext)\n\n  // -------------------------------------------------------------------\n  // TODO: possibly move to context or AddCourse component after refactoring\n  const [open, setOpen] = useState(false)\n  // const [isLoading, setIsLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [severity, setSeverity] = useState(null)\n  const [error, setError] = useState(null)\n  // -------------------------------------------------------------------\n\n  const courseType = useTrait('ge')\n  const courseStartTime = useTrait('06:00')\n  const courseEndTime = useTrait('23:00')\n  const courseDays = useTrait([])\n  const [timePickerStartTime, setTimePickerStartTime] = useState(21600) // start at 6am\n  const [timePickerEndTime, setTimePickerEndTime] = useState(82800) // end at 11pm\n\n  const courseData = useTrait({\n    userID: JSON.parse(user).googleId,\n    type: 'ge',\n    number: 0,\n    dept: '',\n    title: '',\n    units: 0,\n    // hardcoded term and year\n    term: 'Spring',\n    year: 2021,\n    designation: 'A1 - Oral Communication',\n    additionalReq: '',\n    section: 0,\n    startTime: '06:00',\n    endTime: '23:00',\n    days: [],\n    location: '',\n  })\n\n  const formik = useFormik({\n    initialValues: {\n      courseNumber: '',\n      courseDept: '',\n      courseTitle: '',\n      courseUnits: '',\n      courseDesignation: '',\n      courseAdditionalReq: '',\n      courseSection: '',\n      location: '',\n    },\n    validationSchema: Yup.object({\n      courseNumber: Yup.string()\n        .required('This field is required')\n        .typeError('You must specify a number'),\n      courseDept: Yup.string().required('This field is required'),\n      courseTitle: Yup.string().required('This field is required'),\n      courseUnits: Yup.string().required('This field is required'),\n      courseSection: Yup.number().required('This field is required'),\n      location: Yup.string().required('This field is required'),\n    }),\n    onSubmit: (values) => {\n      handleSubmit(values)\n    },\n  })\n\n  const getTime = (dateTime, seconds) => {\n    const date = new Date(dateTime.getTime() + (seconds / 60) * 60000)\n    let hour = date.getHours().toString()\n    let minutes = date.getMinutes().toString()\n\n    if (hour.length === 1) {\n      hour = '0' + hour\n    }\n\n    if (minutes.length === 1) {\n      minutes = '0' + minutes\n    }\n\n    const time = hour + ':' + minutes\n    return time\n  }\n\n  const handleCourseTypeChange = (val) => {\n    const newCourseType = courseType.set(val)\n    if (val === 'ge') {\n      courseData.set({\n        ...courseData.get(),\n        type: newCourseType,\n        designation: 'A1 - Oral Communication',\n        additionalReq: null,\n      })\n    } else {\n      courseData.set({\n        ...courseData.get(),\n        type: newCourseType,\n        designation: 'Lower Div',\n        additionalReq: null,\n      })\n    }\n  }\n\n  const handleTimeStartChange = (seconds) => {\n    const dateTime = new Date('July 1, 1999')\n\n    // time in 24h string format\n    const time = getTime(dateTime, seconds)\n    setTimePickerStartTime(seconds)\n    const newCourseStartTime = courseStartTime.set(time)\n    courseData.set({ ...courseData.get(), startTime: newCourseStartTime })\n  }\n\n  const handleTimeEndChange = (seconds) => {\n    const dateTime = new Date('July 1, 1999')\n\n    // time in 24h string format\n    const time = getTime(dateTime, seconds)\n    setTimePickerEndTime(seconds)\n    const newCourseEndTime = courseEndTime.set(time)\n    courseData.set({ ...courseData.get(), endTime: newCourseEndTime })\n  }\n\n  const handleCourseDayChange = (days) => {\n    const newCourseDays = courseDays.set(days)\n    courseData.set({ ...courseData.get(), days: newCourseDays })\n  }\n\n  // -----------------------------------------------------\n  // TODO: possibly move to context\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n  // -----------------------------------------------------\n\n  const handleSubmit = async ({\n    courseNumber,\n    courseDept,\n    courseTitle,\n    courseUnits,\n    courseDesignation,\n    courseAdditionalReq,\n    courseSection,\n    location,\n  }) => {\n    if (courseType.get() === 'ge') {\n      if (courseDesignation === '') {\n        courseDesignation = 'A1 - Oral Communication'\n      }\n    } else {\n      if (courseDesignation === '') {\n        courseDesignation = 'Lower Div'\n      }\n    }\n\n    if (courseAdditionalReq === '') {\n      courseAdditionalReq = 'N/A'\n    }\n\n    courseData.set({ ...courseData.get(), number: courseNumber })\n    courseData.set({ ...courseData.get(), dept: courseDept })\n    courseData.set({ ...courseData.get(), title: courseTitle })\n    courseData.set({ ...courseData.get(), units: courseUnits })\n    courseData.set({ ...courseData.get(), designation: courseDesignation })\n    courseData.set({ ...courseData.get(), additionalReq: courseAdditionalReq })\n    courseData.set({ ...courseData.get(), section: courseSection })\n    courseData.set({ ...courseData.get(), location: location })\n\n    try {\n      const res = await addCurrentCourse(courseData.get())\n      if (res.data.success === true) {\n        setSuccess(true)\n        setSeverity('success')\n        setOpen(true)\n        // setIsLoading(false)\n      }\n    } catch (error) {\n      setSeverity('error')\n      setOpen(true)\n      setError(error.message)\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <Row className=\"d-flex mt-5 justify-content-center\">\n          <Col md={9}>\n            <Card className=\"text-center shadow-sm mb-3\">\n              <Card.Body>\n                <Row className=\"my-2\">\n                  <Col className=\"d-flex justify-content-center\">\n                    <Form onSubmit={formik.handleSubmit}>\n                      {/* COURSE TYPE */}\n                      <ToggleButtonGroup\n                        className=\"mb-3\"\n                        type=\"radio\"\n                        name=\"options\"\n                        defaultValue=\"ge\"\n                        onChange={handleCourseTypeChange}\n                      >\n                        <ToggleButton value=\"ge\">GE Course</ToggleButton>\n                        <ToggleButton value=\"major\">Major Course</ToggleButton>\n                      </ToggleButtonGroup>\n                      {/* COURSE NUMBER */}\n                      <Form.Group controlId=\"courseNumber\">\n                        <Form.Label>Course Number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"courseNumber\"\n                          {...formik.getFieldProps('courseNumber')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseNumber &&\n                      formik.errors.courseNumber ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseNumber}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE DEPT */}\n                      <Form.Group controlId=\"courseDept\">\n                        <Form.Label>Course Department</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"courseDept\"\n                          {...formik.getFieldProps('courseDept')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseDept && formik.errors.courseDept ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseDept}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE TITLE */}\n                      <Form.Group controlId=\"courseTitle\">\n                        <Form.Label>Course Title</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"courseTitle\"\n                          {...formik.getFieldProps('courseTitle')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseTitle &&\n                      formik.errors.courseTitle ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseTitle}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE UNITS */}\n                      <Form.Group controlId=\"courseUnits\">\n                        <Form.Label>Units</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"courseUnits\"\n                          {...formik.getFieldProps('courseUnits')}\n                        >\n                          <option value=\"\"></option>\n                          <option value=\"1\">1</option>\n                          <option value=\"2\">2</option>\n                          <option value=\"3\">3</option>\n                          <option value=\"4\">4</option>\n                          <option value=\"5\">5</option>\n                        </Form.Control>\n                      </Form.Group>\n                      {formik.touched.courseUnits &&\n                      formik.errors.courseUnits ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseUnits}\n                        </div>\n                      ) : null}\n\n                      {/* COURSE DESIGNATION */}\n                      {courseType.get() === 'ge' ? (\n                        // ge designation\n                        <>\n                          <Form.Group controlId=\"designation\">\n                            <Form.Label>Designation</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              name=\"designation\"\n                              {...formik.getFieldProps('courseDesignation')}\n                            >\n                              {geReqData.slice(0, 13).map((ge, idx) => {\n                                return (\n                                  <option\n                                    value={`${ge.designation} - ${ge.course}`}\n                                    key={idx}\n                                  >\n                                    {ge.designation} - {ge.course}\n                                  </option>\n                                )\n                              })}\n                            </Form.Control>\n                          </Form.Group>\n\n                          {/* Additional Req */}\n                          <Form.Group controlId=\"additinalReq\">\n                            <Form.Label>Additional Requirements</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              name=\"additionalReq\"\n                              {...formik.getFieldProps('courseAdditionalReq')}\n                            >\n                              <option value=\"-\" key={1}>\n                                -\n                              </option>\n                              <option value=\"Human Diversity\" key={2}>\n                                Human Diversity\n                              </option>\n                              <option value=\"Global Issues\" key={3}>\n                                Global Issues\n                              </option>\n                            </Form.Control>\n                          </Form.Group>\n                        </>\n                      ) : (\n                        // major designation\n                        <Form.Group controlId=\"designation\">\n                          <Form.Label>Designation</Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            name=\"designation\"\n                            {...formik.getFieldProps('courseDesignation')}\n                          >\n                            {majorReqCategory.map((category, idx) => {\n                              return (\n                                <option value={category} key={idx}>\n                                  {category}\n                                </option>\n                              )\n                            })}\n                          </Form.Control>\n                        </Form.Group>\n                      )}\n\n                      {/* COURSE SECTION */}\n                      <Form.Group controlId=\"section\">\n                        <Form.Label>Section</Form.Label>\n\n                        <Form.Control\n                          type=\"input\"\n                          name=\"courseSection\"\n                          {...formik.getFieldProps('courseSection')}\n                        />\n                      </Form.Group>\n                      {formik.touched.courseSection &&\n                      formik.errors.courseSection ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.courseSection}\n                        </div>\n                      ) : null}\n                      <Row>\n                        <Col>\n                          {/* COURSE START TIME */}\n                          <Form.Group controlId=\"startTime\">\n                            <Form.Label>Start Time</Form.Label>\n\n                            <TimePicker\n                              start=\"06:00\"\n                              end=\"23:00\"\n                              name=\"courseStartTime\"\n                              value={timePickerStartTime}\n                              step={5}\n                              onChange={handleTimeStartChange}\n                              onBlur={formik.handleBlur}\n                            />\n                          </Form.Group>\n                          {formik.touched.startTime &&\n                          formik.errors.startTime ? (\n                            <div style={{ color: 'red' }}>\n                              {formik.errors.startTime}\n                            </div>\n                          ) : null}\n                        </Col>\n                        <Col>\n                          {/* COURSE END TIME */}\n                          <Form.Group controlId=\"endTime\">\n                            <Form.Label>End Time</Form.Label>\n\n                            <TimePicker\n                              start=\"06:00\"\n                              end=\"23:00\"\n                              name=\"courseEndTime\"\n                              onChange={handleTimeEndChange}\n                              value={timePickerEndTime}\n                              step={5}\n                              onBlur={formik.handleBlur}\n                            />\n                          </Form.Group>\n                        </Col>\n                      </Row>\n\n                      {/* COURSE DAYS */}\n                      <Form.Group controlId=\"day\">\n                        <Row>\n                          <Col className=\"d-flex flex-column\">\n                            <Form.Label>Day</Form.Label>\n\n                            <Container>\n                              <ToggleButtonGroup\n                                type=\"checkbox\"\n                                name=\"courseDays\"\n                                onChange={handleCourseDayChange}\n                                value={courseDays.get()}\n                              >\n                                <ToggleButton value=\"Mon\">M</ToggleButton>\n                                <ToggleButton value=\"Tues\">T</ToggleButton>\n                                <ToggleButton value=\"Wed\">W</ToggleButton>\n                                <ToggleButton value=\"Thurs\">Th</ToggleButton>\n                                <ToggleButton value=\"Fri\">F</ToggleButton>\n                                <ToggleButton value=\"Sat\">S</ToggleButton>\n                              </ToggleButtonGroup>\n                            </Container>\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      {formik.touched.days && formik.errors.days ? (\n                        <div style={{ color: 'red' }}>{formik.errors.days}</div>\n                      ) : null}\n\n                      {/* COURSE LOCATION */}\n                      <Form.Group controlId=\"location\">\n                        <Form.Label>Location</Form.Label>\n\n                        <Form.Control\n                          type=\"input\"\n                          name=\"courseLocation\"\n                          {...formik.getFieldProps('location')}\n                        />\n                      </Form.Group>\n                      {formik.touched.location && formik.errors.location ? (\n                        <div style={{ color: 'red' }}>\n                          {formik.errors.location}\n                        </div>\n                      ) : null}\n\n                      <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\n                        Submit\n                      </Button>\n\n                      <MySnackbar\n                        open={open}\n                        severity={severity}\n                        error={error}\n                        success={success}\n                        handleClose={handleClose}\n                      />\n                    </Form>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default CurrentCourseForm\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst SchoolYear = ({\n  handleAddTerm,\n  handleTermChange,\n  handleYearChange,\n  validated,\n}) => {\n  return (\n    <Card className=\"text-center\">\n      <Card.Body>\n        <Form noValidate validated={validated} onSubmit={handleAddTerm}>\n          <Form.Group controlId=\"term\">\n            <Form.Label>Select a Term</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"term\"\n              onChange={handleTermChange}\n              required\n            >\n              <option value=\"\"></option>\n              <option value=\"Spring\">Spring</option>\n              <option value=\"Summer\">Summer</option>\n              <option value=\"Fall\">Fall</option>\n              <option value=\"Winter\">Winter</option>\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">\n              Please select a term.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"year\">\n            <Form.Label>Select a Year</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"year\"\n              onChange={handleYearChange}\n              required\n            >\n              <option value=\"\"></option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2022\">2022</option>\n              <option value=\"2023\">2023</option>\n              <option value=\"2024\">2024</option>\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">\n              Please select a year.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"year\">\n            <Form.Label>\n              To add courses, select the Term and Year, then select Create New\n              Term. Next, drag a course from the table into the corresponding\n              term below.\n            </Form.Label>\n          </Form.Group>\n          <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\n            Create New Term\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default SchoolYear\n","export const majorReqData = [\n  {\n    course: 'CECS 100',\n    title: 'Critical Thinking in the Digital Information Age',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39965',\n  },\n  {\n    course: 'CECS 105',\n    title: 'Introduction to Computer Engineering and Computer Science',\n    units: 1,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39966',\n  },\n  {\n    course: 'CECS 174',\n    title: 'Introduction to Programming and Problem Solving',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39968',\n  },\n  {\n    course: 'CECS 225',\n    title: 'Digital Logic and Assembly Programming',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39973',\n  },\n  {\n    course: 'CECS 228',\n    title: 'Discrete Structures with Computing Applications',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39974',\n  },\n  {\n    course: 'CECS 229',\n    title: 'Discrete Structures with Computing Applications II',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39975',\n  },\n  {\n    course: 'CECS 274',\n    title: 'Data Structures',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39978',\n  },\n  {\n    course: 'CECS 277',\n    title: 'Object Oriented Application Development',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39980',\n  },\n  {\n    course: 'CECS 282',\n    title: 'Advanced C++',\n    units: 3,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39979',\n  },\n  {\n    course: 'ENGR 101',\n    title: 'Introduction to the Engineering Profession',\n    units: 1,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41479',\n  },\n  {\n    course: 'ENGR 102',\n    title: 'Academic Success Skills',\n    units: 1,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41480',\n  },\n  {\n    course: 'MATH 122',\n    title: 'Calculus I',\n    units: 4,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=42941',\n  },\n  {\n    course: 'MATH 123',\n    title: 'Calculus II',\n    units: 4,\n    designation: 'Lower Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=42942',\n  },\n  {\n    course: 'PHYS 151',\n    title: 'Mechanics and Heat',\n    units: 4,\n    designation: 'Physical Science',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=43489',\n  },\n  {\n    course: 'CHEM 111A',\n    title: 'General Chemistry',\n    units: 5,\n    designation: 'Physical Science',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40229',\n  },\n  {\n    course: 'BIOL 153',\n    title: 'Introduction to Marine Biology',\n    units: 3,\n    designation: 'Life Science',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39572',\n  },\n  {\n    course: 'BIOL 200',\n    title: 'General Biology',\n    units: 4,\n    designation: 'Life Science',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39573',\n  },\n  {\n    course: 'BIOL 205',\n    title: 'Human Biology',\n    units: 4,\n    designation: 'Life Science',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39574',\n  },\n  {\n    course: 'BIOL 207',\n    title: 'Human Physiology',\n    units: 4,\n    designation: 'Life Science',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39575',\n  },\n  {\n    course: 'CECS 323',\n    title: 'Database Fundamentals',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39988',\n  },\n  {\n    course: 'CECS 326',\n    title: 'Operating Systems',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39989',\n  },\n  {\n    course: 'CECS 327',\n    title: 'Introduction to Networks and Distributed Computing',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39990',\n  },\n  {\n    course: 'CECS 328',\n    title: 'Algorithms',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39991',\n  },\n  {\n    course: 'CECS 329',\n    title: 'Concepts of Computer Science Theory',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=53069',\n  },\n  {\n    course: 'CECS 341',\n    title: 'Computer Architecture and Organization',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39992',\n  },\n  {\n    course: 'CECS 342',\n    title: 'Principles of Programming Languages',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=53070',\n  },\n  {\n    course: 'CECS 343',\n    title: 'Introduction to Software Engineering',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39993',\n  },\n  {\n    course: 'CECS 378',\n    title: 'Introduction to Computer Security Principles',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39997',\n  },\n  {\n    course: 'EE 381',\n    title: 'Probability and Statistics with Applications to Computing',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40854',\n  },\n  {\n    course: 'ENGR 350',\n    title: 'Computers, Ethics and Society',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41489',\n  },\n  {\n    course: 'CECS 491A',\n    title: 'Computer Science Senior Project I',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40089',\n  },\n  {\n    course: 'CECS 491B',\n    title: 'Computer Science Senior Project II',\n    units: 3,\n    designation: 'Upper Div',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40090',\n  },\n  {\n    course: 'ENGR 361',\n    title: 'Scientific Research Communication',\n    units: 3,\n    designation: 'Writing Intensive',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=44730',\n  },\n  {\n    course: 'ENGR 390',\n    title: 'Information and Communication Technology for Sustainability',\n    units: 3,\n    designation: 'Writing Intensive',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=41493',\n  },\n  {\n    course: 'MATH 323',\n    title: 'Introduction to Numerical Analysis',\n    units: 4,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=42952',\n  },\n  {\n    course: 'CECS 419',\n    title: 'Theory of Computation',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40001',\n  },\n  {\n    course: 'CECS 428',\n    title: 'Analysis of Algorithms',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40003',\n  },\n  {\n    course: 'CECS 429',\n    title: 'Search Engine Technology',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40004',\n  },\n  {\n    course: 'CECS 444',\n    title: 'Compiler Construction',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40006',\n  },\n  {\n    course: 'CECS 445',\n    title: 'Software Design and Architecture',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40007',\n  },\n  {\n    course: 'CECS 448',\n    title: 'User Interface Design',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40009',\n  },\n  {\n    course: 'CECS 449',\n    title: 'Computer Graphics',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40010',\n  },\n  {\n    course: 'CECS 451',\n    title: 'Artificial Intelligence',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40011',\n  },\n  {\n    course: 'CECS 455',\n    title: 'Introduction to Game Programming',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40013',\n  },\n  {\n    course: 'CECS 456',\n    title: 'Machine Learning',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=44683',\n  },\n  {\n    course: 'CECS 474',\n    title: 'Computer Network Interoperability',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40018',\n  },\n  {\n    course: 'CECS 478',\n    title: 'Introduction to Computer Security',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40021',\n  },\n  {\n    course: 'CECS 495',\n    title: 'Computational Physiology',\n    units: 3,\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40022',\n  },\n  {\n    course: 'CECS 497',\n    title: 'Directed Studies',\n    units: '1-3',\n    designation: 'Core Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40024',\n  },\n  {\n    course: 'CECS 303',\n    title: 'Networks and Network Security',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=39986',\n  },\n  {\n    course: 'CECS 450',\n    title: 'Data Visualization',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=44679',\n  },\n  {\n    course: 'CECS 453',\n    title: 'Mobile Application Development',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40012',\n  },\n  {\n    course: 'CECS 461',\n    title: 'Hardware/Software Co-design',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40015',\n  },\n  {\n    course: 'CECS 470',\n    title: 'Web Programming and Accessibility',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40017',\n  },\n  {\n    course: 'CECS 475',\n    title: 'Software Development with Frameworks',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40019',\n  },\n  {\n    course: 'CECS 476',\n    title: 'System and Network Administration',\n    units: 3,\n    designation: 'Applied Elective',\n    url:\n    'http://catalog.csulb.edu/preview_course_nopop.php?catoid=5&coid=40020',\n  },\n]\n","import React from \"react\"\nimport MaterialTable from 'material-table'\nimport {Link} from 'react-router-dom'\n\nexport const ExportPdf = (props) => {\n\n  const columns=\n  [\n    { title: 'Term', field: 'term' },\n    { title: 'Year', field: 'year' },\n    { title: 'Course', field: 'course' },\n    { title: 'Title', field: 'title' },\n    { title: 'Units', field: 'units', type: 'numeric' },\n    { title: 'Designation', field: 'designation' },\n    { title: 'URL', field: 'url'},\n  ]\n  \n  \n  const courses = Object.entries(props.data).filter(([key, value]) => {\n    return key !== \"initialTable\"\n  }).map(([key, value]) => {\n    return (\n      value.items.map(item => {\n        return {\n          term: value.term,\n          year: value.year,\n          course: item.course,\n          title: item.title,\n          units: item.units,\n          designation: item.designation,\n          url: <Link to={item.url}>{item.course}</Link>\n        }\n      })\n    )\n  })\n\n  let masterList = courses[0]\n  for (let i = 1; i < courses.length; i++) {\n    masterList = masterList.concat(courses[i])\n  }\n  \n\n  return (    \n    <MaterialTable\n      title=\"CECS Roadmap\"\n      columns={columns}\n      data={masterList}        \n      options=\n      {{\n        exportButton: true\n      }}\n    />\n    \n  )\n}","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport SchoolYear from '../../components/Tables/SchoolYear/SchoolYear'\nimport { majorReqData } from '../../assets/CecsReqs'\nimport '../../utility/css/table-fixed-height.css'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n// import DeleteIcon from \"@material-ui/icons/Delete\"\nimport { ExportPdf } from './ExportPdf'\n// import axios from 'axios'\n// import { saveAs } from 'file-saver'\n\nconst Roadmap = () => {\n  const [termList, setTermList] = useState({\n    initialTable: {\n      term: '',\n      year: '',\n      items: majorReqData,\n    },\n  })\n  const [term, setTerm] = useState()\n  const [year, setYear] = useState()\n  const [show, setShow] = useState(false)\n  const [validated, setValidated] = useState(false)\n\n  const handleYearChange = (event) => {\n    setYear(event.target.value)\n  }\n\n  const handleTermChange = (event) => {\n    setTerm(event.target.value)\n  }\n\n  const handleAddTerm = (e) => {\n    e.preventDefault()\n    const form = e.currentTarget\n    if (form.checkValidity() === false) {\n      e.stopPropagation()\n    }\n    setValidated(true)\n    setTermList((prevState) => {\n      return {\n        ...prevState,\n        [`${term}${year}`]: {\n          term: term,\n          year: year,\n          items: [],\n        },\n      }\n    })\n  }\n\n  // const createAndDownloadPdf = () => {\n  //   const API = axios.create({ baseURL: 'http://localhost:5000' })\n  //   API.post('/create-pdf', termList)\n  //     .then(() => API.get('fetch-pdf', { responseType: 'blob' }))\n  //     .then((res) => {\n  //       const pdfBlob = new Blob([res.data], { type: 'application/pdf' })\n\n  //       saveAs(pdfBlob, 'myRoadmap.pdf')\n  //     })\n  // }\n\n  const onDragEnd = (result, termList, setTermList) => {\n    const { source, destination } = result\n    if (!destination) return\n\n    if ((source.droppableId === destination.droppableId) === 'initialTable') {\n      return\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = termList[source.droppableId]\n      const destColumn = termList[destination.droppableId]\n      const sourceItems = [...sourceColumn.items]\n      const destItems = [...destColumn.items]\n      const [removed] = sourceItems.splice(source.index, 1)\n      destItems.splice(destination.index, 0, removed)\n      setTermList({\n        ...termList,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems,\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems,\n        },\n      })\n    } else {\n      const column = termList[source.droppableId]\n      const copiedItems = [...column.items]\n      const [removed] = copiedItems.splice(source.index, 1)\n      copiedItems.splice(destination.index, 0, removed)\n      setTermList({\n        ...termList,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems,\n        },\n      })\n    }\n  }\n\n  const handleClick = () => {\n    setShow(true)\n  }\n\n  return (\n    <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, termList, setTermList)}\n    >\n      <Container>\n        {/* Title */}\n        <Row className=\"d-flex mt-5 justify-content-center padding\">\n          <Col>\n            <Card className=\"text-center shadow-sm\">\n              <Card.Body>\n                <Card.Title>CECS Roadmap</Card.Title>\n                <SchoolYear\n                  handleAddTerm={handleAddTerm}\n                  handleTermChange={handleTermChange}\n                  handleYearChange={handleYearChange}\n                  validated={validated}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* Catalog */}\n\n        <Row className=\"d-flex mt-5 justify-content-center row-padding\">\n          <Col>\n            <div className=\"table-wrapper row-padding\">\n              {/* Table Wrapper */}\n\n              {/* Start of Draggable/Droppable Courses */}\n              <Droppable droppableId={'initialTable'}>\n                {(provided) => {\n                  return (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {termList.initialTable.items.map((item, index) => {\n                        return (\n                          <Draggable\n                            key={item.course}\n                            index={index}\n                            draggableId={item.course}\n                          >\n                            {(provided) => {\n                              return (\n                                <ul\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  ref={provided.innerRef}\n                                >\n                                  <li>\n                                    <Link\n                                      to={{ pathname: item.url }}\n                                      target=\"_blank\"\n                                    >{`${item.course} - ${item.title} - ${item.units} Units - ${item.designation}`}</Link>\n                                  </li>\n                                </ul>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n            </div>\n          </Col>\n        </Row>\n\n        <Row className=\"d-flex mt-5 justify-content-center row-padding\">\n          {Object.entries(termList)\n            .filter(([key, value]) => {\n              return key !== 'initialTable'\n            })\n            .map(([key, value], index) => {\n              return (\n                <Col xs={6} className=\"table-wrapper\">\n                  <Card>\n                    <Card.Body>\n                      <Card.Title>{`${value.term} ${value.year}`}</Card.Title>\n                      <Droppable droppableId={key} key={key}>\n                        {(provided, snapshot) => {\n                          return (\n                            <div\n                              {...provided.droppableProps}\n                              ref={provided.innerRef}\n                              style={{\n                                background: snapshot.isDraggingOver\n                                  ? 'lightblue'\n                                  : 'white',\n                                padding: 4,\n                                width: 400,\n                                minHeight: 280,\n                              }}\n                            >\n                              {value.items.map((item, index) => {\n                                return (\n                                  <Draggable\n                                    key={item.course}\n                                    draggableId={item.course}\n                                    index={index}\n                                  >\n                                    {(provided, snapshot) => {\n                                      return (\n                                        <div\n                                          ref={provided.innerRef}\n                                          {...provided.draggableProps}\n                                          {...provided.dragHandleProps}\n                                          style={{\n                                            userSelect: 'none',\n                                            padding: 16,\n                                            margin: '0 0 8px 0',\n                                            minHeight: '50px',\n                                            backgroundColor: snapshot.isDragging\n                                              ? '#263B4A'\n                                              : '#456C86',\n                                            color: 'white',\n                                            ...provided.draggableProps.style,\n                                          }}\n                                        >\n                                          {`${item.course} ${item.title}`}\n                                        </div>\n                                      )\n                                    }}\n                                  </Draggable>\n                                )\n                              })}\n                              {provided.placeholder}\n                            </div>\n                          )\n                        }}\n                      </Droppable>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            })}\n        </Row>\n\n        {show ? <ExportPdf className=\"row-padding\" data={termList} /> : null}\n\n        <Row className=\"d-flex mt-5 justify-content-center text-center padding\">\n          <Col>\n            <Button className=\"mb-4 \" onClick={handleClick}>\n              Create PDF Table\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </DragDropContext>\n  )\n}\n\nexport default Roadmap\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, user, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => (user ? <Component /> : <Redirect to=\"/login\" />)}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React, { useContext } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport Login from '../../pages/Login/Login'\nimport Dashboard from '../../pages/Dashboard/Dashboard'\nimport CourseHistory from '../../pages/CourseHistory/CourseHistory'\n//import AddCourse from '../../pages/AddCourse/AddCourse';\nimport CompletedCourseForm from '../Forms/CompletedCourseForm/CompletedCourseForm'\nimport CurrentCourseForm from '../Forms/CurrentCourseForm/CurrentCourseForm'\nimport Roadmap from '../../pages/Roadmap/Roadmap'\nimport PrivateRoute from './PrivateRoute/PrivateRoute'\nimport { myContext } from '../../context/Context'\n\nconst AppRoutes = () => {\n  const { user, handleLogin } = useContext(myContext)\n  /*\n  May need to add the userID as a parameter appended to all routes.\n  const userID = JSON.parse(user).googleId\n  */\n\n  return (\n    <Switch>\n      <PrivateRoute path=\"/dashboard\" user={user} component={Dashboard} />\n      <PrivateRoute path=\"/roadmap\" user={user} component={Roadmap} />\n      <PrivateRoute path=\"/history\" user={user} component={CourseHistory} />\n      <PrivateRoute\n        path=\"/add-completed-course\"\n        user={user}\n        component={CompletedCourseForm}\n      />\n      <PrivateRoute\n        path=\"/add-current-course\"\n        user={user}\n        component={CurrentCourseForm}\n      />\n\n      {user ? (\n        <Redirect from=\"/login\" to=\"/dashboard\" />\n      ) : (\n        <Route exact path=\"/login\">\n          <Login handleLogin={handleLogin} />\n        </Route>\n      )}\n\n      <Redirect from=\"/\" to=\"/login\" />\n    </Switch>\n  )\n}\n\nexport default AppRoutes\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ConfirmProvider } from 'material-ui-confirm'\n\nimport Navigation from './components/Navigation/Navigation'\nimport AppRoutes from './components/AppRoutes/AppRoutes'\n\nimport './App.css'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    color: '#2a9d8f',\n  },\n}))\n\n// app\nconst App = () => {\n  const classes = useStyles()\n\n  return (\n    <ConfirmProvider\n      defaultOptions={{\n        confirmationButtonProps: { className: classes.root },\n      }}\n    >\n      <Router>\n        <Navigation />\n        <Container>\n          <AppRoutes />\n        </Container>\n      </Router>\n    </ConfirmProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\n\nimport App from './App'\nimport Context from './context/Context'\n\nReactDOM.render(\n  <>\n    <Context>\n      <App />\n    </Context>\n  </>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}